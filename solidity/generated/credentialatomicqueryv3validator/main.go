// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package credentialatomicqueryv3validator

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// CredentialAtomicQueryValidatorCommonPubSignals is an auto generated low-level Go binding around an user-defined struct.
type CredentialAtomicQueryValidatorCommonPubSignals struct {
	Merklized              *big.Int
	UserID                 *big.Int
	IssuerState            *big.Int
	CircuitQueryHash       *big.Int
	RequestID              *big.Int
	Challenge              *big.Int
	GistRoot               *big.Int
	IssuerID               *big.Int
	IsRevocationChecked    *big.Int
	IssuerClaimNonRevState *big.Int
	Timestamp              *big.Int
}

// ICircuitValidatorKeyToInputIndex is an auto generated low-level Go binding around an user-defined struct.
type ICircuitValidatorKeyToInputIndex struct {
	Key        string
	InputIndex *big.Int
}

// Credentialatomicqueryv3validatorMetaData contains all meta data concerning the Credentialatomicqueryv3validator contract.
var Credentialatomicqueryv3validatorMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGISTRootExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProofExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevocationStateExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedCircuitIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"ids\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifierContractAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stateContractAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"inputIndexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"}],\"name\":\"parseCommonPubSignals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"merklized\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circuitQueryHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"challenge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gistRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isRevocationChecked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerClaimNonRevState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"structCredentialAtomicQueryValidator.CommonPubSignals\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setGISTRootExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setProofExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setRevocationStateExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stateContractAddr\",\"type\":\"address\"}],\"name\":\"setStateAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"inputIndex\",\"type\":\"uint256\"}],\"internalType\":\"structICircuitValidator.KeyToInputIndex[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b506156b980620000216000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638c752c75116100ad578063cb5aa55811610071578063cb5aa558146102d0578063f177a69e14610300578063f2fde38b14610330578063fb5af2a21461034c578063ffa1ad741461036a57610121565b80638c752c75146102285780638da5cb5b14610246578063af4c4fd514610264578063b16a394f14610282578063ba47e32a146102b257610121565b8063485cc955116100f4578063485cc955146101ac57806348d36920146101c857806354fd4d50146101e4578063652377dc14610202578063715018a61461021e57610121565b806301ffc9a7146101265780631134b480146101565780631c4c7fd81461017257806331969e571461018e575b600080fd5b610140600480360381019061013b9190612e84565b610388565b60405161014d9190612ecc565b60405180910390f35b610170600480360381019061016b9190612f1d565b610402565b005b61018c60048036038101906101879190612fa8565b61041d565b005b610196610472565b6040516101a39190612fe4565b60405180910390f35b6101c660048036038101906101c19190612fff565b6104a5565b005b6101e260048036038101906101dd9190612f1d565b610b25565b005b6101ec610b40565b6040516101f991906130cf565b60405180910390f35b61021c60048036038101906102179190612f1d565b610b7d565b005b610226610b98565b005b610230610bac565b60405161023d9190613100565b60405180910390f35b61024e610bbf565b60405161025b9190612fe4565b60405180910390f35b61026c610be9565b6040516102799190613100565b60405180910390f35b61029c60048036038101906102979190613250565b610bfc565b6040516102a99190613100565b60405180910390f35b6102ba610c81565b6040516102c79190613100565b60405180910390f35b6102ea60048036038101906102e591906132f9565b610c94565b6040516102f79190613436565b60405180910390f35b61031a600480360381019061031591906134ec565b610e14565b6040516103279190613707565b60405180910390f35b61034a60048036038101906103459190612fa8565b610e34565b005b610354610eb7565b60405161036191906137eb565b60405180910390f35b610372610f99565b60405161037f91906130cf565b60405180910390f35b60007fefba2023000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fb57506103fa82610fd2565b5b9050919050565b61040a61103c565b806104136110ba565b6005018190555050565b61042561103c565b8061042e6110ba565b60020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061047c6110ba565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff161590508080156104d65750600160008054906101000a900460ff1660ff16105b8061050357506104e5306110e2565b1580156105025750600160008054906101000a900460ff1660ff16145b5b610542576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105399061387f565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561057f576001600060016101000a81548160ff0219169083151502179055505b6105bf6040518060400160405280600981526020017f6d65726b6c697a656400000000000000000000000000000000000000000000008152506000611105565b6105ff6040518060400160405280600681526020017f75736572494400000000000000000000000000000000000000000000000000008152506001611105565b61063f6040518060400160405280601081526020017f63697263756974517565727948617368000000000000000000000000000000008152506002611105565b61067f6040518060400160405280600b81526020017f69737375657253746174650000000000000000000000000000000000000000008152506003611105565b6106bf6040518060400160405280600681526020017f6c696e6b494400000000000000000000000000000000000000000000000000008152506004611105565b6106ff6040518060400160405280600981526020017f6e756c6c696669657200000000000000000000000000000000000000000000008152506005611105565b61073f6040518060400160405280600e81526020017f6f70657261746f724f75747075740000000000000000000000000000000000008152506006611105565b61077f6040518060400160405280600981526020017f70726f6f665479706500000000000000000000000000000000000000000000008152506007611105565b6107bf6040518060400160405280600981526020017f72657175657374494400000000000000000000000000000000000000000000008152506008611105565b6107ff6040518060400160405280600981526020017f6368616c6c656e676500000000000000000000000000000000000000000000008152506009611105565b61083f6040518060400160405280600881526020017f67697374526f6f74000000000000000000000000000000000000000000000000815250600a611105565b61087f6040518060400160405280600881526020017f6973737565724944000000000000000000000000000000000000000000000000815250600b611105565b6108bf6040518060400160405280601381526020017f69735265766f636174696f6e436865636b656400000000000000000000000000815250600c611105565b6108ff6040518060400160405280601681526020017f697373756572436c61696d4e6f6e526576537461746500000000000000000000815250600d611105565b61093f6040518060400160405280600981526020017f74696d657374616d700000000000000000000000000000000000000000000000815250600e611105565b61097f6040518060400160405280600a81526020017f7665726966696572494400000000000000000000000000000000000000000000815250600f611105565b6109bf6040518060400160405280601281526020017f6e756c6c696669657253657373696f6e494400000000000000000000000000008152506010611105565b6109ff6040518060400160405280600b81526020017f61757468456e61626c65640000000000000000000000000000000000000000008152506011611105565b6000610a096110ba565b9050604051806020016040528060405180606001604052806025815260200161565f6025913981525081600101906001610a44929190612c8d565b50838160000160405180606001604052806025815260200161565f60259139604051610a7091906138db565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ac68484611141565b508015610b205760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610b179190613944565b60405180910390a15b505050565b610b2d61103c565b80610b366110ba565b6004018190555050565b60606040518060400160405280600c81526020017f322e302e302d626574612e300000000000000000000000000000000000000000815250905090565b610b8561103c565b80610b8e6110ba565b6003018190555050565b610ba061103c565b610baa600061120d565b565b6000610bb66110ba565b60050154905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610bf36110ba565b60030154905090565b600080610c076110ba565b60060183604051610c1891906138db565b908152602001604051809103902054905060008103610c6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c63906139ab565b60405180910390fd5b80610c76906139fa565b905080915050919050565b6000610c8b6110ba565b60040154905090565b610c9c612ce6565b600060405180610160016040528085856000818110610cbe57610cbd613a23565b5b90506020020135815260200185856001818110610cde57610cdd613a23565b5b90506020020135815260200185856003818110610cfe57610cfd613a23565b5b90506020020135815260200185856002818110610d1e57610d1d613a23565b5b90506020020135815260200185856008818110610d3e57610d3d613a23565b5b90506020020135815260200185856009818110610d5e57610d5d613a23565b5b9050602002013581526020018585600a818110610d7e57610d7d613a23565b5b9050602002013581526020018585600b818110610d9e57610d9d613a23565b5b9050602002013581526020018585600c818110610dbe57610dbd613a23565b5b9050602002013581526020018585600d818110610dde57610ddd613a23565b5b9050602002013581526020018585600e818110610dfe57610dfd613a23565b5b9050602002013581525090508091505092915050565b6060610e2689898989898989896112d3565b905098975050505050505050565b610e3c61103c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290613ac4565b60405180910390fd5b610eb48161120d565b50565b6060610ec16110ba565b600101805480602002602001604051908101604052809291908181526020016000905b82821015610f90578382906000526020600020018054610f0390613b13565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2f90613b13565b8015610f7c5780601f10610f5157610100808354040283529160200191610f7c565b820191906000526020600020905b815481529060010190602001808311610f5f57829003601f168201915b505050505081526020019060010190610ee4565b50505050905090565b6040518060400160405280600c81526020017f322e302e302d626574612e30000000000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611044611628565b73ffffffffffffffffffffffffffffffffffffffff16611062610bbf565b73ffffffffffffffffffffffffffffffffffffffff16146110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90613b90565b60405180910390fd5b565b60007f28c92975a30f1f2f7970a65953987652034d896ba2d3b7a4961ada9e18287500905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b8061110f90613bb0565b90508061111a6110ba565b6006018360405161112b91906138db565b9081526020016040518091039020819055505050565b600060019054906101000a900460ff16611190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118790613c6a565b60405180910390fd5b600061119a6110ba565b9050610e108160030181905550610e108160040181905550610e108160050181905550818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611208611630565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6060600084848101906112e69190614006565b905060006112f26110ba565b6000018260e0015160008151811061130d5761130c613a23565b5b602002602001015160405161132291906138db565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060018260e00151511480156113955750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6113d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113cb9061409b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16632612907c8a8a8a8f8f6040518663ffffffff1660e01b8152600401611415959493929190614205565b602060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061426a565b611495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148c906142e3565b60405180910390fd5b60006114a18c8c610c94565b90508260a001518160600151146114ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e490614375565b60405180910390fd5b6114ff81600001518460200151611689565b6115118160e001518460c001516116e8565b6115238160e001518260400151611778565b6115368160e00151826101200151611883565b611544816101400151611bd3565b611558816101000151846101000151611c72565b60006115648d8d611cca565b9050611579846101a001518260800151611dc9565b61158c8461016001518260a00151611e1a565b61159f8461014001518260000151611e60565b6115b28461018001518260600151611ecc565b6115c58160200151856101600151611f1d565b60018160c00151036115e3576115de8260c00151611f70565b6115f2565b6115f18260200151876120d0565b5b6116008260a00151876121b8565b60006116126010866040015114612232565b9050809550505050505098975050505050505050565b600033905090565b600060019054906101000a900460ff1661167f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167690613c6a565b60405180910390fd5b6116876125e9565b565b600080820361169957600061169c565b60015b60ff1690508083146116e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116da906143e1565b60405180910390fd5b505050565b6000815103156117745760005b81518110156117385781818151811061171157611710613a23565b5b602002602001015183036117255750611774565b808061173090613bb0565b9150506116f5565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176b90614473565b60405180910390fd5b5050565b6000611784838361264a565b90508061187e5760006117956110ba565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353c8731285856040518363ffffffff1660e01b81526004016117f3929190614493565b60e060405180830381865afa158015611810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118349190614585565b90508060000151841461187c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187390614624565b60405180910390fd5b505b505050565b600061188d6110ba565b905060008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b8a295a856040518263ffffffff1660e01b81526004016118ee9190613100565b602060405180830381865afa15801561190b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192f919061426a565b90508061198457611940848461264a565b61197f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611976906146dc565b60405180910390fd5b611bcd565b60008260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4bdea55866040518263ffffffff1660e01b81526004016119e39190613100565b60e060405180830381865afa158015611a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a249190614585565b905083816020015114611bcb5760008360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353c8731287876040518363ffffffff1660e01b8152600401611a92929190614493565b60e060405180830381865afa158015611aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad39190614585565b9050600081600001511480611aec575085816000015114155b15611b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b239061476e565b60405180910390fd5b6000816080015103611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90614800565b60405180910390fd5b8360030154816080015142611b889190614820565b1115611bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc0906148c6565b60405180910390fd5b505b505b50505050565b42811115611c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0d90614958565b60405180910390fd5b611c1e6110ba565b600401548142611c2e9190614820565b1115611c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c66906149c4565b60405180910390fd5b50565b6000600190508115611c8357600090505b808314611cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbc90614a56565b60405180910390fd5b505050565b611cd2612d40565b60006040518060e0016040528085856004818110611cf357611cf2613a23565b5b90506020020135815260200185856005818110611d1357611d12613a23565b5b90506020020135815260200185856006818110611d3357611d32613a23565b5b90506020020135815260200185856007818110611d5357611d52613a23565b5b9050602002013581526020018585600f818110611d7357611d72613a23565b5b90506020020135815260200185856010818110611d9357611d92613a23565b5b90506020020135815260200185856011818110611db357611db2613a23565b5b9050602002013581525090508091505092915050565b6000821480611dd757508082145b611e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0d90614ae8565b60405180910390fd5b5050565b808214611e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5390614b7a565b60405180910390fd5b5050565b600082148015611e705750600081145b80611e89575060008214158015611e88575060008114155b5b611ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebf90614be6565b60405180910390fd5b5050565b6000821480611eda57508082145b611f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1090614c78565b60405180910390fd5b5050565b6000811480611f2d575060008214155b611f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6390614ce4565b60405180910390fd5b5050565b6000611f7a6110ba565b905060008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637c1a66de846040518263ffffffff1660e01b8152600401611fdb9190613100565b60c060405180830381865afa158015611ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201c9190614da4565b905082816000015114612064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205b90614e43565b60405180910390fd5b600081606001511415801561208b575081600501548160600151426120899190614820565b115b156120cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c290614eaf565b60405180910390fd5b505050565b6121736120db6110ba565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663133fe3856040518163ffffffff1660e01b8152600401602060405180830381865afa158015612149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216d9190614f27565b82612684565b82146121b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ab90614fc6565b60405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff166121d8836126ad565b73ffffffffffffffffffffffffffffffffffffffff161461222e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222590615058565b60405180910390fd5b5050565b6060600082612242576006612245565b60075b60ff16905060008167ffffffffffffffff81111561226657612265613125565b5b60405190808252806020026020018201604052801561229f57816020015b61228c612d7d565b8152602001906001900390816122845790505b509050600060405180604001604052806040518060400160405280600681526020017f7573657249440000000000000000000000000000000000000000000000000000815250815260200160018152508282806122fb90613bb0565b93508151811061230e5761230d613a23565b5b602002602001018190525060405180604001604052806040518060400160405280600681526020017f6c696e6b494400000000000000000000000000000000000000000000000000008152508152602001600481525082828061237090613bb0565b93508151811061238357612382613a23565b5b602002602001018190525060405180604001604052806040518060400160405280600981526020017f6e756c6c69666965720000000000000000000000000000000000000000000000815250815260200160058152508282806123e590613bb0565b9350815181106123f8576123f7613a23565b5b6020026020010181905250841561247f5760405180604001604052806040518060400160405280600e81526020017f6f70657261746f724f75747075740000000000000000000000000000000000008152508152602001600681525082828061246090613bb0565b93508151811061247357612472613a23565b5b60200260200101819052505b60405180604001604052806040518060400160405280600981526020017f74696d657374616d7000000000000000000000000000000000000000000000008152508152602001600e8152508282806124d690613bb0565b9350815181106124e9576124e8613a23565b5b602002602001018190525060405180604001604052806040518060400160405280600a81526020017f76657269666965724944000000000000000000000000000000000000000000008152508152602001600f81525082828061254b90613bb0565b93508151811061255e5761255d613a23565b5b602002602001018190525060405180604001604052806040518060400160405280601281526020017f6e756c6c696669657253657373696f6e49440000000000000000000000000000815250815260200160108152508282806125c090613bb0565b9350815181106125d3576125d2613a23565b5b6020026020010181905250819350505050919050565b600060019054906101000a900460ff16612638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161262f90613c6a565b60405180910390fd5b612648612643611628565b61120d565b565b60008061265e612659856126cf565b61281b565b612667906150b5565b905060006126758285612878565b90508085149250505092915050565b600080612690836129c6565b90506126a48461269f836126cf565b612878565b91505092915050565b60006126c86126c36126be846126cf565b61281b565b6129e6565b9050919050565b600081905060087eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216901b60087fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff008316901c17905060107dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216901b60107fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff00008316901c17905060207bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8216901b60207fffffffff00000000ffffffff00000000ffffffff00000000ffffffff000000008316901c179050604077ffffffffffffffff0000000000000000ffffffffffffffff8216901b60407fffffffffffffffff0000000000000000ffffffffffffffff00000000000000008316901c179050608081901b608082901c179050919050565b6060602067ffffffffffffffff81111561283857612837613125565b5b6040519080825280601f01601f19166020018201604052801561286a5781602001600182028036833780820191505090505b509050816020820152919050565b60008061288c612887846126cf565b61281b565b905060006128a982601b84516128a29190614820565b601b6129f4565b905060006128d6866040516020016128c1919061513d565b60405160208183030381529060405283612a0a565b9050601d81511461291c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612913906151ca565b60405180910390fd5b600061292f61292a83612a1e565b612ab8565b9050600081604051602001612944919061522e565b604051602081830303815290604052905060006129618483612a0a565b9050601f8151146129a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299e90615295565b60405180910390fd5b6129b86129b382612ad7565b6126cf565b965050505050505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b600060148201519050919050565b6060612a01848484612ae5565b90509392505050565b6060612a168383612c03565b905092915050565b6000601d825114612a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a5b906151ca565b60405180910390fd5b60005b8251811015612ab257828181518110612a8357612a82613a23565b5b602001015160f81c60f81b60f81c60ff1682612a9f91906152b5565b915080612aab90613bb0565b9050612a67565b50919050565b600081905060088161ffff16901b60088261ffff16901c179050919050565b600060208201519050919050565b606081601f83612af591906152eb565b1015612b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b2d9061536b565b60405180910390fd5b8183612b4291906152eb565b84511015612b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b7c906153d7565b60405180910390fd5b6060821560008114612ba65760405191506000825260208201604052612bf7565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612be45780518352602083019250602081019050612bc7565b50868552601f19601f8301166040525050505b50809150509392505050565b6060806040519050835180825260208201818101602087015b81831015612c395780518352602083019250602081019050612c1c565b50855192508351830184528091508282019050602086015b81831015612c6e5780518352602083019250602081019050612c51565b50601f19601f8851850115830101166040525050508091505092915050565b828054828255906000526020600020908101928215612cd5579160200282015b82811115612cd4578251829081612cc4919061558c565b5091602001919060010190612cad565b5b509050612ce29190612d97565b5090565b60405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060608152602001600081525090565b5b80821115612db75760008181612dae9190612dbb565b50600101612d98565b5090565b508054612dc790613b13565b6000825580601f10612dd95750612df8565b601f016020900490600052602060002090810190612df79190612dfb565b5b50565b5b80821115612e14576000816000905550600101612dfc565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612e6181612e2c565b8114612e6c57600080fd5b50565b600081359050612e7e81612e58565b92915050565b600060208284031215612e9a57612e99612e22565b5b6000612ea884828501612e6f565b91505092915050565b60008115159050919050565b612ec681612eb1565b82525050565b6000602082019050612ee16000830184612ebd565b92915050565b6000819050919050565b612efa81612ee7565b8114612f0557600080fd5b50565b600081359050612f1781612ef1565b92915050565b600060208284031215612f3357612f32612e22565b5b6000612f4184828501612f08565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f7582612f4a565b9050919050565b612f8581612f6a565b8114612f9057600080fd5b50565b600081359050612fa281612f7c565b92915050565b600060208284031215612fbe57612fbd612e22565b5b6000612fcc84828501612f93565b91505092915050565b612fde81612f6a565b82525050565b6000602082019050612ff96000830184612fd5565b92915050565b6000806040838503121561301657613015612e22565b5b600061302485828601612f93565b925050602061303585828601612f93565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561307957808201518184015260208101905061305e565b60008484015250505050565b6000601f19601f8301169050919050565b60006130a18261303f565b6130ab818561304a565b93506130bb81856020860161305b565b6130c481613085565b840191505092915050565b600060208201905081810360008301526130e98184613096565b905092915050565b6130fa81612ee7565b82525050565b600060208201905061311560008301846130f1565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61315d82613085565b810181811067ffffffffffffffff8211171561317c5761317b613125565b5b80604052505050565b600061318f612e18565b905061319b8282613154565b919050565b600067ffffffffffffffff8211156131bb576131ba613125565b5b6131c482613085565b9050602081019050919050565b82818337600083830152505050565b60006131f36131ee846131a0565b613185565b90508281526020810184848401111561320f5761320e613120565b5b61321a8482856131d1565b509392505050565b600082601f8301126132375761323661311b565b5b81356132478482602086016131e0565b91505092915050565b60006020828403121561326657613265612e22565b5b600082013567ffffffffffffffff81111561328457613283612e27565b5b61329084828501613222565b91505092915050565b600080fd5b600080fd5b60008083601f8401126132b9576132b861311b565b5b8235905067ffffffffffffffff8111156132d6576132d5613299565b5b6020830191508360208202830111156132f2576132f161329e565b5b9250929050565b600080602083850312156133105761330f612e22565b5b600083013567ffffffffffffffff81111561332e5761332d612e27565b5b61333a858286016132a3565b92509250509250929050565b61334f81612ee7565b82525050565b6101608201600082015161336c6000850182613346565b50602082015161337f6020850182613346565b5060408201516133926040850182613346565b5060608201516133a56060850182613346565b5060808201516133b86080850182613346565b5060a08201516133cb60a0850182613346565b5060c08201516133de60c0850182613346565b5060e08201516133f160e0850182613346565b50610100820151613406610100850182613346565b5061012082015161341b610120850182613346565b50610140820151613430610140850182613346565b50505050565b60006101608201905061344c6000830184613355565b92915050565b60008190508260206002028201111561346e5761346d61329e565b5b92915050565b6000819050826040600202820111156134905761348f61329e565b5b92915050565b60008083601f8401126134ac576134ab61311b565b5b8235905067ffffffffffffffff8111156134c9576134c8613299565b5b6020830191508360018202830111156134e5576134e461329e565b5b9250929050565b600080600080600080600080610160898b03121561350d5761350c612e22565b5b600089013567ffffffffffffffff81111561352b5761352a612e27565b5b6135378b828c016132a3565b9850985050602061354a8b828c01613452565b965050606061355b8b828c01613474565b95505060e061356c8b828c01613452565b94505061012089013567ffffffffffffffff81111561358e5761358d612e27565b5b61359a8b828c01613496565b93509350506101406135ae8b828c01612f93565b9150509295985092959890939650565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006136068261303f565b61361081856135ea565b935061362081856020860161305b565b61362981613085565b840191505092915050565b6000604083016000830151848203600086015261365182826135fb565b91505060208301516136666020860182613346565b508091505092915050565b600061367d8383613634565b905092915050565b6000602082019050919050565b600061369d826135be565b6136a781856135c9565b9350836020820285016136b9856135da565b8060005b858110156136f557848403895281516136d68582613671565b94506136e183613685565b925060208a019950506001810190506136bd565b50829750879550505050505092915050565b600060208201905081810360008301526137218184613692565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061376183836135fb565b905092915050565b6000602082019050919050565b600061378182613729565b61378b8185613734565b93508360208202850161379d85613745565b8060005b858110156137d957848403895281516137ba8582613755565b94506137c583613769565b925060208a019950506001810190506137a1565b50829750879550505050505092915050565b600060208201905081810360008301526138058184613776565b905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613869602e8361304a565b91506138748261380d565b604082019050919050565b600060208201905081810360008301526138988161385c565b9050919050565b600081905092915050565b60006138b58261303f565b6138bf818561389f565b93506138cf81856020860161305b565b80840191505092915050565b60006138e782846138aa565b915081905092915050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061392e613929613924846138f2565b613909565b6138fc565b9050919050565b61393e81613913565b82525050565b60006020820190506139596000830184613935565b92915050565b7f496e707574206e616d65206e6f7420666f756e64000000000000000000000000600082015250565b600061399560148361304a565b91506139a08261395f565b602082019050919050565b600060208201905081810360008301526139c481613988565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a0582612ee7565b915060008203613a1857613a176139cb565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613aae60268361304a565b9150613ab982613a52565b604082019050919050565b60006020820190508181036000830152613add81613aa1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b2b57607f821691505b602082108103613b3e57613b3d613ae4565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613b7a60208361304a565b9150613b8582613b44565b602082019050919050565b60006020820190508181036000830152613ba981613b6d565b9050919050565b6000613bbb82612ee7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613bed57613bec6139cb565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613c54602b8361304a565b9150613c5f82613bf8565b604082019050919050565b60006020820190508181036000830152613c8381613c47565b9050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115613caf57613cae613125565b5b602082029050602081019050919050565b6000613cd3613cce84613c94565b613185565b90508083825260208201905060208402830185811115613cf657613cf561329e565b5b835b81811015613d1f5780613d0b8882612f08565b845260208401935050602081019050613cf8565b5050509392505050565b600082601f830112613d3e57613d3d61311b565b5b8135613d4e848260208601613cc0565b91505092915050565b600067ffffffffffffffff821115613d7257613d71613125565b5b602082029050602081019050919050565b6000613d96613d9184613d57565b613185565b90508083825260208201905060208402830185811115613db957613db861329e565b5b835b81811015613e0057803567ffffffffffffffff811115613dde57613ddd61311b565b5b808601613deb8982613222565b85526020850194505050602081019050613dbb565b5050509392505050565b600082601f830112613e1f57613e1e61311b565b5b8135613e2f848260208601613d83565b91505092915050565b613e4181612eb1565b8114613e4c57600080fd5b50565b600081359050613e5e81613e38565b92915050565b60006101c08284031215613e7b57613e7a613c8a565b5b613e866101c0613185565b90506000613e9684828501612f08565b6000830152506020613eaa84828501612f08565b6020830152506040613ebe84828501612f08565b6040830152506060613ed284828501612f08565b606083015250608082013567ffffffffffffffff811115613ef657613ef5613c8f565b5b613f0284828501613d29565b60808301525060a0613f1684828501612f08565b60a08301525060c082013567ffffffffffffffff811115613f3a57613f39613c8f565b5b613f4684828501613d29565b60c08301525060e082013567ffffffffffffffff811115613f6a57613f69613c8f565b5b613f7684828501613e0a565b60e083015250610100613f8b84828501613e4f565b61010083015250610120613fa184828501612f08565b61012083015250610140613fb784828501612f08565b61014083015250610160613fcd84828501612f08565b61016083015250610180613fe384828501612f08565b610180830152506101a0613ff984828501612f08565b6101a08301525092915050565b60006020828403121561401c5761401b612e22565b5b600082013567ffffffffffffffff81111561403a57614039612e27565b5b61404684828501613e64565b91505092915050565b7f496e76616c696420636972637569742049440000000000000000000000000000600082015250565b600061408560128361304a565b91506140908261404f565b602082019050919050565b600060208201905081810360008301526140b481614078565b9050919050565b82818337505050565b6140d0604083836140bb565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b614100604083836140bb565b5050565b600061411083836140f4565b60408301905092915050565b600082905092915050565b6000604082019050919050565b61413d816140d4565b61414781846140df565b9250614152826140ea565b8060005b8381101561418b57614168828461411c565b6141728782614104565b965061417d83614127565b925050600181019050614156565b505050505050565b600082825260208201905092915050565b600080fd5b60006141b58385614193565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156141e8576141e76141a4565b5b6020830292506141f98385846140bb565b82840190509392505050565b60006101208201905061421b60008301886140c4565b6142286040830187614134565b61423560c08301866140c4565b8181036101008301526142498184866141a9565b90509695505050505050565b60008151905061426481613e38565b92915050565b6000602082840312156142805761427f612e22565b5b600061428e84828501614255565b91505092915050565b7f50726f6f66206973206e6f742076616c69640000000000000000000000000000600082015250565b60006142cd60128361304a565b91506142d882614297565b602082019050919050565b600060208201905081810360008301526142fc816142c0565b9050919050565b7f5175657279206861736820646f6573206e6f74206d617463682074686520726560008201527f71756573746564206f6e65000000000000000000000000000000000000000000602082015250565b600061435f602b8361304a565b915061436a82614303565b604082019050919050565b6000602082019050818103600083015261438e81614352565b9050919050565b7f4d65726b6c697a65642076616c7565206973206e6f7420636f72726563740000600082015250565b60006143cb601e8361304a565b91506143d682614395565b602082019050919050565b600060208201905081810360008301526143fa816143be565b9050919050565b7f497373756572206973206e6f74206f6e2074686520416c6c6f7765642049737360008201527f75657273206c6973740000000000000000000000000000000000000000000000602082015250565b600061445d60298361304a565b915061446882614401565b604082019050919050565b6000602082019050818103600083015261448c81614450565b9050919050565b60006040820190506144a860008301856130f1565b6144b560208301846130f1565b9392505050565b6000815190506144cb81612ef1565b92915050565b600060e082840312156144e7576144e6613c8a565b5b6144f160e0613185565b90506000614501848285016144bc565b6000830152506020614515848285016144bc565b6020830152506040614529848285016144bc565b604083015250606061453d848285016144bc565b6060830152506080614551848285016144bc565b60808301525060a0614565848285016144bc565b60a08301525060c0614579848285016144bc565b60c08301525092915050565b600060e0828403121561459b5761459a612e22565b5b60006145a9848285016144d1565b91505092915050565b7f537461746520646f65736e277420657869737420696e20737461746520636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b600061460e60258361304a565b9150614619826145b2565b604082019050919050565b6000602082019050818103600083015261463d81614601565b9050919050565b7f497373756572207265766f636174696f6e20737461746520646f65736e27742060008201527f657869737420696e20737461746520636f6e747261637420616e64206973206e60208201527f6f742067656e6573697300000000000000000000000000000000000000000000604082015250565b60006146c6604a8361304a565b91506146d182614644565b606082019050919050565b600060208201905081810360008301526146f5816146b9565b9050919050565b7f537461746520696e207472616e736974696f6e20696e666f20636f6e7461696e60008201527f7320696e76616c69642069640000000000000000000000000000000000000000602082015250565b6000614758602c8361304a565b9150614763826146fc565b604082019050919050565b600060208201905081810360008301526147878161474b565b9050919050565b7f4e6f6e2d4c617465737420737461746520646f65736e277420636f6e7461696e60008201527f207265706c6163656d656e7420696e666f726d6174696f6e0000000000000000602082015250565b60006147ea60388361304a565b91506147f58261478e565b604082019050919050565b60006020820190508181036000830152614819816147dd565b9050919050565b600061482b82612ee7565b915061483683612ee7565b925082820390508181111561484e5761484d6139cb565b5b92915050565b7f4e6f6e2d5265766f636174696f6e207374617465206f6620497373756572206560008201527f7870697265640000000000000000000000000000000000000000000000000000602082015250565b60006148b060268361304a565b91506148bb82614854565b604082019050919050565b600060208201905081810360008301526148df816148a3565b9050919050565b7f50726f6f662067656e65726174656420696e207468652066757475726520697360008201527f206e6f742076616c696400000000000000000000000000000000000000000000602082015250565b6000614942602a8361304a565b915061494d826148e6565b604082019050919050565b6000602082019050818103600083015261497181614935565b9050919050565b7f47656e6572617465642070726f6f66206973206f757464617465640000000000600082015250565b60006149ae601b8361304a565b91506149b982614978565b602082019050919050565b600060208201905081810360008301526149dd816149a1565b9050919050565b7f5265766f636174696f6e20636865636b2073686f756c64206d6174636820746860008201527f6520717565727900000000000000000000000000000000000000000000000000602082015250565b6000614a4060278361304a565b9150614a4b826149e4565b604082019050919050565b60006020820190508181036000830152614a6f81614a33565b9050919050565b7f56657269666965722049442073686f756c64206d61746368207468652071756560008201527f7279000000000000000000000000000000000000000000000000000000000000602082015250565b6000614ad260228361304a565b9150614add82614a76565b604082019050919050565b60006020820190508181036000830152614b0181614ac5565b9050919050565b7f4e756c6c69666965722073657373696f6e2049442073686f756c64206d61746360008201527f6820746865207175657279000000000000000000000000000000000000000000602082015250565b6000614b64602b8361304a565b9150614b6f82614b08565b604082019050919050565b60006020820190508181036000830152614b9381614b57565b9050919050565b7f496e76616c6964204c696e6b20494420707562207369676e616c000000000000600082015250565b6000614bd0601a8361304a565b9150614bdb82614b9a565b602082019050919050565b60006020820190508181036000830152614bff81614bc3565b9050919050565b7f50726f6f6620747970652073686f756c64206d6174636820746865207265717560008201527f6573746564206f6e6520696e2071756572790000000000000000000000000000602082015250565b6000614c6260328361304a565b9150614c6d82614c06565b604082019050919050565b60006020820190508181036000830152614c9181614c55565b9050919050565b7f496e76616c6964206e756c6c69667920707562207369676e616c000000000000600082015250565b6000614cce601a8361304a565b9150614cd982614c98565b602082019050919050565b60006020820190508181036000830152614cfd81614cc1565b9050919050565b600060c08284031215614d1a57614d19613c8a565b5b614d2460c0613185565b90506000614d34848285016144bc565b6000830152506020614d48848285016144bc565b6020830152506040614d5c848285016144bc565b6040830152506060614d70848285016144bc565b6060830152506080614d84848285016144bc565b60808301525060a0614d98848285016144bc565b60a08301525092915050565b600060c08284031215614dba57614db9612e22565b5b6000614dc884828501614d04565b91505092915050565b7f4769737420726f6f742073746174652069736e277420696e207374617465206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b6000614e2d60278361304a565b9150614e3882614dd1565b604082019050919050565b60006020820190508181036000830152614e5c81614e20565b9050919050565b7f4769737420726f6f742069732065787069726564000000000000000000000000600082015250565b6000614e9960148361304a565b9150614ea482614e63565b602082019050919050565b60006020820190508181036000830152614ec881614e8c565b9050919050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b614f0481614ecf565b8114614f0f57600080fd5b50565b600081519050614f2181614efb565b92915050565b600060208284031215614f3d57614f3c612e22565b5b6000614f4b84828501614f12565b91505092915050565b7f55736572494420646f6573206e6f7420636f72726573706f6e6420746f20746860008201527f652073656e646572000000000000000000000000000000000000000000000000602082015250565b6000614fb060288361304a565b9150614fbb82614f54565b604082019050919050565b60006020820190508181036000830152614fdf81614fa3565b9050919050565b7f4368616c6c656e67652073686f756c64206d61746368207468652073656e646560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061504260218361304a565b915061504d82614fe6565b604082019050919050565b6000602082019050818103600083015261507181615035565b9050919050565b600081519050919050565b6000819050602082019050919050565b600061509f8251614ecf565b80915050919050565b600082821b905092915050565b60006150c082615078565b826150ca84615083565b90506150d581615093565b92506002821015615115576151107fffff000000000000000000000000000000000000000000000000000000000000836002036008026150a8565b831692505b5050919050565b6000819050919050565b61513761513282614ecf565b61511c565b82525050565b60006151498284615126565b60028201915081905092915050565b7f436865636b73756d207265717569726573203239206c656e677468206172726160008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b60006151b460218361304a565b91506151bf82615158565b604082019050919050565b600060208201905081810360008301526151e3816151a7565b9050919050565b600061ffff82169050919050565b60008160f01b9050919050565b6000615210826151f8565b9050919050565b615228615223826151ea565b615205565b82525050565b600061523a8284615217565b60028201915081905092915050565b7f69644279746573207265717569726573203331206c656e677468206172726179600082015250565b600061527f60208361304a565b915061528a82615249565b602082019050919050565b600060208201905081810360008301526152ae81615272565b9050919050565b60006152c0826151ea565b91506152cb836151ea565b9250828201905061ffff8111156152e5576152e46139cb565b5b92915050565b60006152f682612ee7565b915061530183612ee7565b9250828201905080821115615319576153186139cb565b5b92915050565b7f736c6963655f6f766572666c6f77000000000000000000000000000000000000600082015250565b6000615355600e8361304a565b91506153608261531f565b602082019050919050565b6000602082019050818103600083015261538481615348565b9050919050565b7f736c6963655f6f75744f66426f756e6473000000000000000000000000000000600082015250565b60006153c160118361304a565b91506153cc8261538b565b602082019050919050565b600060208201905081810360008301526153f0816153b4565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b60006008830261544c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826150a8565b61545686836150a8565b95508019841693508086168417925050509392505050565b600061548961548461547f84612ee7565b613909565b612ee7565b9050919050565b6000819050919050565b6154a38361546e565b6154b76154af82615490565b84845461541c565b825550505050565b600090565b6154cc6154bf565b6154d781848461549a565b505050565b5b818110156154fb576154f06000826154c4565b6001810190506154dd565b5050565b601f82111561554057615511816153f7565b61551a8461540c565b81016020851015615529578190505b61553d6155358561540c565b8301826154dc565b50505b505050565b600082821c905092915050565b600061556360001984600802615545565b1980831691505092915050565b600061557c8383615552565b9150826002028217905092915050565b6155958261303f565b67ffffffffffffffff8111156155ae576155ad613125565b5b6155b88254613b13565b6155c38282856154ff565b600060209050601f8311600181146155f657600084156155e4578287015190505b6155ee8582615570565b865550615656565b601f198416615604866153f7565b60005b8281101561562c57848901518255600182019150602085019450602081019050615607565b868310156156495784890151615645601f891682615552565b8355505b6001600288020188555050505b50505050505056fe63726564656e7469616c41746f6d6963517565727956334f6e436861696e2d626574612e30a2646970667358221220a0c103a4ce8edd14f2762cce7e1304f60cf9f83acbd10ae9617f6eb71d3cb75264736f6c63430008100033",
}

// Credentialatomicqueryv3validatorABI is the input ABI used to generate the binding from.
// Deprecated: Use Credentialatomicqueryv3validatorMetaData.ABI instead.
var Credentialatomicqueryv3validatorABI = Credentialatomicqueryv3validatorMetaData.ABI

// Credentialatomicqueryv3validatorBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use Credentialatomicqueryv3validatorMetaData.Bin instead.
var Credentialatomicqueryv3validatorBin = Credentialatomicqueryv3validatorMetaData.Bin

// DeployCredentialatomicqueryv3validator deploys a new Ethereum contract, binding an instance of Credentialatomicqueryv3validator to it.
func DeployCredentialatomicqueryv3validator(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Credentialatomicqueryv3validator, error) {
	parsed, err := Credentialatomicqueryv3validatorMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(Credentialatomicqueryv3validatorBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Credentialatomicqueryv3validator{Credentialatomicqueryv3validatorCaller: Credentialatomicqueryv3validatorCaller{contract: contract}, Credentialatomicqueryv3validatorTransactor: Credentialatomicqueryv3validatorTransactor{contract: contract}, Credentialatomicqueryv3validatorFilterer: Credentialatomicqueryv3validatorFilterer{contract: contract}}, nil
}

// Credentialatomicqueryv3validator is an auto generated Go binding around an Ethereum contract.
type Credentialatomicqueryv3validator struct {
	Credentialatomicqueryv3validatorCaller     // Read-only binding to the contract
	Credentialatomicqueryv3validatorTransactor // Write-only binding to the contract
	Credentialatomicqueryv3validatorFilterer   // Log filterer for contract events
}

// Credentialatomicqueryv3validatorCaller is an auto generated read-only Go binding around an Ethereum contract.
type Credentialatomicqueryv3validatorCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Credentialatomicqueryv3validatorTransactor is an auto generated write-only Go binding around an Ethereum contract.
type Credentialatomicqueryv3validatorTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Credentialatomicqueryv3validatorFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type Credentialatomicqueryv3validatorFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Credentialatomicqueryv3validatorSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type Credentialatomicqueryv3validatorSession struct {
	Contract     *Credentialatomicqueryv3validator // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                     // Call options to use throughout this session
	TransactOpts bind.TransactOpts                 // Transaction auth options to use throughout this session
}

// Credentialatomicqueryv3validatorCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type Credentialatomicqueryv3validatorCallerSession struct {
	Contract *Credentialatomicqueryv3validatorCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                           // Call options to use throughout this session
}

// Credentialatomicqueryv3validatorTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type Credentialatomicqueryv3validatorTransactorSession struct {
	Contract     *Credentialatomicqueryv3validatorTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                           // Transaction auth options to use throughout this session
}

// Credentialatomicqueryv3validatorRaw is an auto generated low-level Go binding around an Ethereum contract.
type Credentialatomicqueryv3validatorRaw struct {
	Contract *Credentialatomicqueryv3validator // Generic contract binding to access the raw methods on
}

// Credentialatomicqueryv3validatorCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type Credentialatomicqueryv3validatorCallerRaw struct {
	Contract *Credentialatomicqueryv3validatorCaller // Generic read-only contract binding to access the raw methods on
}

// Credentialatomicqueryv3validatorTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type Credentialatomicqueryv3validatorTransactorRaw struct {
	Contract *Credentialatomicqueryv3validatorTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCredentialatomicqueryv3validator creates a new instance of Credentialatomicqueryv3validator, bound to a specific deployed contract.
func NewCredentialatomicqueryv3validator(address common.Address, backend bind.ContractBackend) (*Credentialatomicqueryv3validator, error) {
	contract, err := bindCredentialatomicqueryv3validator(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validator{Credentialatomicqueryv3validatorCaller: Credentialatomicqueryv3validatorCaller{contract: contract}, Credentialatomicqueryv3validatorTransactor: Credentialatomicqueryv3validatorTransactor{contract: contract}, Credentialatomicqueryv3validatorFilterer: Credentialatomicqueryv3validatorFilterer{contract: contract}}, nil
}

// NewCredentialatomicqueryv3validatorCaller creates a new read-only instance of Credentialatomicqueryv3validator, bound to a specific deployed contract.
func NewCredentialatomicqueryv3validatorCaller(address common.Address, caller bind.ContractCaller) (*Credentialatomicqueryv3validatorCaller, error) {
	contract, err := bindCredentialatomicqueryv3validator(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validatorCaller{contract: contract}, nil
}

// NewCredentialatomicqueryv3validatorTransactor creates a new write-only instance of Credentialatomicqueryv3validator, bound to a specific deployed contract.
func NewCredentialatomicqueryv3validatorTransactor(address common.Address, transactor bind.ContractTransactor) (*Credentialatomicqueryv3validatorTransactor, error) {
	contract, err := bindCredentialatomicqueryv3validator(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validatorTransactor{contract: contract}, nil
}

// NewCredentialatomicqueryv3validatorFilterer creates a new log filterer instance of Credentialatomicqueryv3validator, bound to a specific deployed contract.
func NewCredentialatomicqueryv3validatorFilterer(address common.Address, filterer bind.ContractFilterer) (*Credentialatomicqueryv3validatorFilterer, error) {
	contract, err := bindCredentialatomicqueryv3validator(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validatorFilterer{contract: contract}, nil
}

// bindCredentialatomicqueryv3validator binds a generic wrapper to an already deployed contract.
func bindCredentialatomicqueryv3validator(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := Credentialatomicqueryv3validatorMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Credentialatomicqueryv3validator.Contract.Credentialatomicqueryv3validatorCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.Credentialatomicqueryv3validatorTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.Credentialatomicqueryv3validatorTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Credentialatomicqueryv3validator.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.contract.Transact(opts, method, params...)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) VERSION() (string, error) {
	return _Credentialatomicqueryv3validator.Contract.VERSION(&_Credentialatomicqueryv3validator.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) VERSION() (string, error) {
	return _Credentialatomicqueryv3validator.Contract.VERSION(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetGISTRootExpirationTimeout is a free data retrieval call binding the contract method 0x8c752c75.
//
// Solidity: function getGISTRootExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) GetGISTRootExpirationTimeout(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "getGISTRootExpirationTimeout")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGISTRootExpirationTimeout is a free data retrieval call binding the contract method 0x8c752c75.
//
// Solidity: function getGISTRootExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) GetGISTRootExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetGISTRootExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetGISTRootExpirationTimeout is a free data retrieval call binding the contract method 0x8c752c75.
//
// Solidity: function getGISTRootExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) GetGISTRootExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetGISTRootExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetProofExpirationTimeout is a free data retrieval call binding the contract method 0xba47e32a.
//
// Solidity: function getProofExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) GetProofExpirationTimeout(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "getProofExpirationTimeout")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetProofExpirationTimeout is a free data retrieval call binding the contract method 0xba47e32a.
//
// Solidity: function getProofExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) GetProofExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetProofExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetProofExpirationTimeout is a free data retrieval call binding the contract method 0xba47e32a.
//
// Solidity: function getProofExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) GetProofExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetProofExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetRevocationStateExpirationTimeout is a free data retrieval call binding the contract method 0xaf4c4fd5.
//
// Solidity: function getRevocationStateExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) GetRevocationStateExpirationTimeout(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "getRevocationStateExpirationTimeout")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRevocationStateExpirationTimeout is a free data retrieval call binding the contract method 0xaf4c4fd5.
//
// Solidity: function getRevocationStateExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) GetRevocationStateExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetRevocationStateExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetRevocationStateExpirationTimeout is a free data retrieval call binding the contract method 0xaf4c4fd5.
//
// Solidity: function getRevocationStateExpirationTimeout() view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) GetRevocationStateExpirationTimeout() (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.GetRevocationStateExpirationTimeout(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetStateAddress is a free data retrieval call binding the contract method 0x31969e57.
//
// Solidity: function getStateAddress() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) GetStateAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "getStateAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetStateAddress is a free data retrieval call binding the contract method 0x31969e57.
//
// Solidity: function getStateAddress() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) GetStateAddress() (common.Address, error) {
	return _Credentialatomicqueryv3validator.Contract.GetStateAddress(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetStateAddress is a free data retrieval call binding the contract method 0x31969e57.
//
// Solidity: function getStateAddress() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) GetStateAddress() (common.Address, error) {
	return _Credentialatomicqueryv3validator.Contract.GetStateAddress(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetSupportedCircuitIds is a free data retrieval call binding the contract method 0xfb5af2a2.
//
// Solidity: function getSupportedCircuitIds() view returns(string[] ids)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) GetSupportedCircuitIds(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "getSupportedCircuitIds")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetSupportedCircuitIds is a free data retrieval call binding the contract method 0xfb5af2a2.
//
// Solidity: function getSupportedCircuitIds() view returns(string[] ids)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) GetSupportedCircuitIds() ([]string, error) {
	return _Credentialatomicqueryv3validator.Contract.GetSupportedCircuitIds(&_Credentialatomicqueryv3validator.CallOpts)
}

// GetSupportedCircuitIds is a free data retrieval call binding the contract method 0xfb5af2a2.
//
// Solidity: function getSupportedCircuitIds() view returns(string[] ids)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) GetSupportedCircuitIds() ([]string, error) {
	return _Credentialatomicqueryv3validator.Contract.GetSupportedCircuitIds(&_Credentialatomicqueryv3validator.CallOpts)
}

// InputIndexOf is a free data retrieval call binding the contract method 0xb16a394f.
//
// Solidity: function inputIndexOf(string name) view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) InputIndexOf(opts *bind.CallOpts, name string) (*big.Int, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "inputIndexOf", name)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InputIndexOf is a free data retrieval call binding the contract method 0xb16a394f.
//
// Solidity: function inputIndexOf(string name) view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) InputIndexOf(name string) (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.InputIndexOf(&_Credentialatomicqueryv3validator.CallOpts, name)
}

// InputIndexOf is a free data retrieval call binding the contract method 0xb16a394f.
//
// Solidity: function inputIndexOf(string name) view returns(uint256)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) InputIndexOf(name string) (*big.Int, error) {
	return _Credentialatomicqueryv3validator.Contract.InputIndexOf(&_Credentialatomicqueryv3validator.CallOpts, name)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) Owner() (common.Address, error) {
	return _Credentialatomicqueryv3validator.Contract.Owner(&_Credentialatomicqueryv3validator.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) Owner() (common.Address, error) {
	return _Credentialatomicqueryv3validator.Contract.Owner(&_Credentialatomicqueryv3validator.CallOpts)
}

// ParseCommonPubSignals is a free data retrieval call binding the contract method 0xcb5aa558.
//
// Solidity: function parseCommonPubSignals(uint256[] inputs) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) ParseCommonPubSignals(opts *bind.CallOpts, inputs []*big.Int) (CredentialAtomicQueryValidatorCommonPubSignals, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "parseCommonPubSignals", inputs)

	if err != nil {
		return *new(CredentialAtomicQueryValidatorCommonPubSignals), err
	}

	out0 := *abi.ConvertType(out[0], new(CredentialAtomicQueryValidatorCommonPubSignals)).(*CredentialAtomicQueryValidatorCommonPubSignals)

	return out0, err

}

// ParseCommonPubSignals is a free data retrieval call binding the contract method 0xcb5aa558.
//
// Solidity: function parseCommonPubSignals(uint256[] inputs) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) ParseCommonPubSignals(inputs []*big.Int) (CredentialAtomicQueryValidatorCommonPubSignals, error) {
	return _Credentialatomicqueryv3validator.Contract.ParseCommonPubSignals(&_Credentialatomicqueryv3validator.CallOpts, inputs)
}

// ParseCommonPubSignals is a free data retrieval call binding the contract method 0xcb5aa558.
//
// Solidity: function parseCommonPubSignals(uint256[] inputs) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) ParseCommonPubSignals(inputs []*big.Int) (CredentialAtomicQueryValidatorCommonPubSignals, error) {
	return _Credentialatomicqueryv3validator.Contract.ParseCommonPubSignals(&_Credentialatomicqueryv3validator.CallOpts, inputs)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Credentialatomicqueryv3validator.Contract.SupportsInterface(&_Credentialatomicqueryv3validator.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Credentialatomicqueryv3validator.Contract.SupportsInterface(&_Credentialatomicqueryv3validator.CallOpts, interfaceId)
}

// Verify is a free data retrieval call binding the contract method 0xf177a69e.
//
// Solidity: function verify(uint256[] inputs, uint256[2] a, uint256[2][2] b, uint256[2] c, bytes data, address sender) view returns((string,uint256)[])
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) Verify(opts *bind.CallOpts, inputs []*big.Int, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int, data []byte, sender common.Address) ([]ICircuitValidatorKeyToInputIndex, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "verify", inputs, a, b, c, data, sender)

	if err != nil {
		return *new([]ICircuitValidatorKeyToInputIndex), err
	}

	out0 := *abi.ConvertType(out[0], new([]ICircuitValidatorKeyToInputIndex)).(*[]ICircuitValidatorKeyToInputIndex)

	return out0, err

}

// Verify is a free data retrieval call binding the contract method 0xf177a69e.
//
// Solidity: function verify(uint256[] inputs, uint256[2] a, uint256[2][2] b, uint256[2] c, bytes data, address sender) view returns((string,uint256)[])
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) Verify(inputs []*big.Int, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int, data []byte, sender common.Address) ([]ICircuitValidatorKeyToInputIndex, error) {
	return _Credentialatomicqueryv3validator.Contract.Verify(&_Credentialatomicqueryv3validator.CallOpts, inputs, a, b, c, data, sender)
}

// Verify is a free data retrieval call binding the contract method 0xf177a69e.
//
// Solidity: function verify(uint256[] inputs, uint256[2] a, uint256[2][2] b, uint256[2] c, bytes data, address sender) view returns((string,uint256)[])
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) Verify(inputs []*big.Int, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int, data []byte, sender common.Address) ([]ICircuitValidatorKeyToInputIndex, error) {
	return _Credentialatomicqueryv3validator.Contract.Verify(&_Credentialatomicqueryv3validator.CallOpts, inputs, a, b, c, data, sender)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Credentialatomicqueryv3validator.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) Version() (string, error) {
	return _Credentialatomicqueryv3validator.Contract.Version(&_Credentialatomicqueryv3validator.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorCallerSession) Version() (string, error) {
	return _Credentialatomicqueryv3validator.Contract.Version(&_Credentialatomicqueryv3validator.CallOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _verifierContractAddr, address _stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) Initialize(opts *bind.TransactOpts, _verifierContractAddr common.Address, _stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "initialize", _verifierContractAddr, _stateContractAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _verifierContractAddr, address _stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) Initialize(_verifierContractAddr common.Address, _stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.Initialize(&_Credentialatomicqueryv3validator.TransactOpts, _verifierContractAddr, _stateContractAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _verifierContractAddr, address _stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) Initialize(_verifierContractAddr common.Address, _stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.Initialize(&_Credentialatomicqueryv3validator.TransactOpts, _verifierContractAddr, _stateContractAddr)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.RenounceOwnership(&_Credentialatomicqueryv3validator.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.RenounceOwnership(&_Credentialatomicqueryv3validator.TransactOpts)
}

// SetGISTRootExpirationTimeout is a paid mutator transaction binding the contract method 0x1134b480.
//
// Solidity: function setGISTRootExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) SetGISTRootExpirationTimeout(opts *bind.TransactOpts, expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "setGISTRootExpirationTimeout", expirationTimeout)
}

// SetGISTRootExpirationTimeout is a paid mutator transaction binding the contract method 0x1134b480.
//
// Solidity: function setGISTRootExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) SetGISTRootExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetGISTRootExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetGISTRootExpirationTimeout is a paid mutator transaction binding the contract method 0x1134b480.
//
// Solidity: function setGISTRootExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) SetGISTRootExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetGISTRootExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetProofExpirationTimeout is a paid mutator transaction binding the contract method 0x48d36920.
//
// Solidity: function setProofExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) SetProofExpirationTimeout(opts *bind.TransactOpts, expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "setProofExpirationTimeout", expirationTimeout)
}

// SetProofExpirationTimeout is a paid mutator transaction binding the contract method 0x48d36920.
//
// Solidity: function setProofExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) SetProofExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetProofExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetProofExpirationTimeout is a paid mutator transaction binding the contract method 0x48d36920.
//
// Solidity: function setProofExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) SetProofExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetProofExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetRevocationStateExpirationTimeout is a paid mutator transaction binding the contract method 0x652377dc.
//
// Solidity: function setRevocationStateExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) SetRevocationStateExpirationTimeout(opts *bind.TransactOpts, expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "setRevocationStateExpirationTimeout", expirationTimeout)
}

// SetRevocationStateExpirationTimeout is a paid mutator transaction binding the contract method 0x652377dc.
//
// Solidity: function setRevocationStateExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) SetRevocationStateExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetRevocationStateExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetRevocationStateExpirationTimeout is a paid mutator transaction binding the contract method 0x652377dc.
//
// Solidity: function setRevocationStateExpirationTimeout(uint256 expirationTimeout) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) SetRevocationStateExpirationTimeout(expirationTimeout *big.Int) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetRevocationStateExpirationTimeout(&_Credentialatomicqueryv3validator.TransactOpts, expirationTimeout)
}

// SetStateAddress is a paid mutator transaction binding the contract method 0x1c4c7fd8.
//
// Solidity: function setStateAddress(address stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) SetStateAddress(opts *bind.TransactOpts, stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "setStateAddress", stateContractAddr)
}

// SetStateAddress is a paid mutator transaction binding the contract method 0x1c4c7fd8.
//
// Solidity: function setStateAddress(address stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) SetStateAddress(stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetStateAddress(&_Credentialatomicqueryv3validator.TransactOpts, stateContractAddr)
}

// SetStateAddress is a paid mutator transaction binding the contract method 0x1c4c7fd8.
//
// Solidity: function setStateAddress(address stateContractAddr) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) SetStateAddress(stateContractAddr common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.SetStateAddress(&_Credentialatomicqueryv3validator.TransactOpts, stateContractAddr)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.TransferOwnership(&_Credentialatomicqueryv3validator.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Credentialatomicqueryv3validator.Contract.TransferOwnership(&_Credentialatomicqueryv3validator.TransactOpts, newOwner)
}

// Credentialatomicqueryv3validatorInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Credentialatomicqueryv3validator contract.
type Credentialatomicqueryv3validatorInitializedIterator struct {
	Event *Credentialatomicqueryv3validatorInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Credentialatomicqueryv3validatorInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Credentialatomicqueryv3validatorInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Credentialatomicqueryv3validatorInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Credentialatomicqueryv3validatorInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Credentialatomicqueryv3validatorInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Credentialatomicqueryv3validatorInitialized represents a Initialized event raised by the Credentialatomicqueryv3validator contract.
type Credentialatomicqueryv3validatorInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) FilterInitialized(opts *bind.FilterOpts) (*Credentialatomicqueryv3validatorInitializedIterator, error) {

	logs, sub, err := _Credentialatomicqueryv3validator.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validatorInitializedIterator{contract: _Credentialatomicqueryv3validator.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *Credentialatomicqueryv3validatorInitialized) (event.Subscription, error) {

	logs, sub, err := _Credentialatomicqueryv3validator.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Credentialatomicqueryv3validatorInitialized)
				if err := _Credentialatomicqueryv3validator.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) ParseInitialized(log types.Log) (*Credentialatomicqueryv3validatorInitialized, error) {
	event := new(Credentialatomicqueryv3validatorInitialized)
	if err := _Credentialatomicqueryv3validator.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Credentialatomicqueryv3validatorOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Credentialatomicqueryv3validator contract.
type Credentialatomicqueryv3validatorOwnershipTransferredIterator struct {
	Event *Credentialatomicqueryv3validatorOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Credentialatomicqueryv3validatorOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Credentialatomicqueryv3validatorOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Credentialatomicqueryv3validatorOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Credentialatomicqueryv3validatorOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Credentialatomicqueryv3validatorOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Credentialatomicqueryv3validatorOwnershipTransferred represents a OwnershipTransferred event raised by the Credentialatomicqueryv3validator contract.
type Credentialatomicqueryv3validatorOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*Credentialatomicqueryv3validatorOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Credentialatomicqueryv3validator.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &Credentialatomicqueryv3validatorOwnershipTransferredIterator{contract: _Credentialatomicqueryv3validator.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *Credentialatomicqueryv3validatorOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Credentialatomicqueryv3validator.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Credentialatomicqueryv3validatorOwnershipTransferred)
				if err := _Credentialatomicqueryv3validator.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Credentialatomicqueryv3validator *Credentialatomicqueryv3validatorFilterer) ParseOwnershipTransferred(log types.Log) (*Credentialatomicqueryv3validatorOwnershipTransferred, error) {
	event := new(Credentialatomicqueryv3validatorOwnershipTransferred)
	if err := _Credentialatomicqueryv3validator.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
