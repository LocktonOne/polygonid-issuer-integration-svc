// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package state

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// IStateGistProof is an auto generated low-level Go binding around an user-defined struct.
type IStateGistProof struct {
	Root         *big.Int
	Existence    bool
	Siblings     [64]*big.Int
	Index        *big.Int
	Value        *big.Int
	AuxExistence bool
	AuxIndex     *big.Int
	AuxValue     *big.Int
}

// IStateGistRootInfo is an auto generated low-level Go binding around an user-defined struct.
type IStateGistRootInfo struct {
	Root                *big.Int
	ReplacedByRoot      *big.Int
	CreatedAtTimestamp  *big.Int
	ReplacedAtTimestamp *big.Int
	CreatedAtBlock      *big.Int
	ReplacedAtBlock     *big.Int
}

// IStateStateInfo is an auto generated low-level Go binding around an user-defined struct.
type IStateStateInfo struct {
	Id                  *big.Int
	State               *big.Int
	ReplacedByState     *big.Int
	CreatedAtTimestamp  *big.Int
	ReplacedAtTimestamp *big.Int
	CreatedAtBlock      *big.Int
	ReplacedAtBlock     *big.Int
}

// StateMetaData contains all meta data concerning the State contract.
var StateMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultIdType\",\"outputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGISTProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[64]\",\"name\":\"siblings\",\"type\":\"uint256[64]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByBlock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[64]\",\"name\":\"siblings\",\"type\":\"uint256[64]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[64]\",\"name\":\"siblings\",\"type\":\"uint256[64]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByTime\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[64]\",\"name\":\"siblings\",\"type\":\"uint256[64]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGISTRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getGISTRootHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistRootInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGISTRootHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistRootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfoByBlock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistRootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfoByTime\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.GistRootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStateInfoById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.StateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"getStateInfoByIdAndState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.StateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStateInfoHistoryById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structIState.StateInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStateInfoHistoryLengthById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"idExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIStateTransitionVerifier\",\"name\":\"verifierContractAddr\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"defaultIdType\",\"type\":\"bytes2\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"defaultIdType\",\"type\":\"bytes2\"}],\"name\":\"setDefaultIdType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifierAddr\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"stateExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newState\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOldStateGenesis\",\"type\":\"bool\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"name\":\"transitState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newState\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOldStateGenesis\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"methodId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"methodParams\",\"type\":\"bytes\"}],\"name\":\"transitStateGeneric\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b614cb380620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063676d5b5a11610104578063b4bdea55116100a2578063e30c397811610071578063e30c39781461057a578063e99858fe14610598578063f2fde38b146105c8578063ffa1ad74146105e4576101cf565b8063b4bdea55146104cc578063d51afebf146104fc578063dccbd57a1461052c578063e12a36c01461054a576101cf565b80637c1a66de116100de5780637c1a66de146104465780637d0dcba5146104765780638da5cb5b14610492578063a7c57eeb146104b0576101cf565b8063676d5b5a14610402578063715018a61461043257806379ba50971461043c576101cf565b80632f7670e41161017157806346657fe91161014b57806346657fe91461036857806353c87312146103865780635437988d146103b65780635845e530146103d2576101cf565b80632f7670e4146102ec5780633025bb8c1461031c578063406e8b4c1461034c576101cf565b8063133fe385116101ad578063133fe38514610264578063233a4d23146102825780632439e3a6146102b257806328f88a65146102d0576101cf565b8063046ff140146101d45780630b8a295a146102045780630ef6e65b14610234575b600080fd5b6101ee60048036038101906101e991906128ad565b610602565b6040516101fb9190612a5a565b60405180910390f35b61021e60048036038101906102199190612a76565b610724565b60405161022b9190612ab2565b60405180910390f35b61024e60048036038101906102499190612a76565b6107ab565b60405161025b9190612b48565b60405180910390f35b61026c610840565b6040516102799190612b9e565b60405180910390f35b61029c600480360381019061029791906128ad565b6108a8565b6040516102a99190612ab2565b60405180910390f35b6102ba610932565b6040516102c79190612bc8565b60405180910390f35b6102ea60048036038101906102e59190612e07565b6109b5565b005b610306600480360381019061030191906128ad565b610ae3565b6040516103139190612fd5565b60405180910390f35b61033660048036038101906103319190612a76565b610c33565b6040516103439190612a5a565b60405180910390f35b61036660048036038101906103619190613093565b610d52565b005b610370610f4a565b60405161037d91906130e2565b60405180910390f35b6103a0600480360381019061039b91906128ad565b610f75565b6040516103ad919061318b565b60405180910390f35b6103d060048036038101906103cb91906131d2565b61100d565b005b6103ec60048036038101906103e79190612a76565b61105a565b6040516103f99190612b48565b60405180910390f35b61041c60048036038101906104179190612a76565b6110ef565b6040516104299190612bc8565b60405180910390f35b61043a611176565b005b61044461118a565b005b610460600480360381019061045b9190612a76565b611217565b60405161046d9190612b48565b60405180910390f35b610490600480360381019061048b919061325a565b6112ac565b005b61049a6113f1565b6040516104a791906130e2565b60405180910390f35b6104ca60048036038101906104c59190613309565b61141b565b005b6104e660048036038101906104e19190612a76565b61142f565b6040516104f3919061318b565b60405180910390f35b610516600480360381019061051191906128ad565b6114c4565b6040516105239190612a5a565b60405180910390f35b6105346115e6565b6040516105419190612bc8565b60405180910390f35b610564600480360381019061055f91906128ad565b6115f7565b6040516105719190612a5a565b60405180910390f35b610582611719565b60405161058f91906130e2565b60405180910390f35b6105b260048036038101906105ad9190613336565b611743565b6040516105bf91906134c6565b60405180910390f35b6105e260048036038101906105dd91906131d2565b611896565b005b6105ec611943565b6040516105f99190613567565b60405180910390f35b61060a61277e565b61071c6102be73__$8ac835ad8d3012be129274ec595ff58680$__63792a470f909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a760405180602001604052808a8152506040518263ffffffff1660e01b81526004016106719190613634565b602060405180830381865af415801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190613664565b866040518463ffffffff1660e01b81526004016106d1939291906136a7565b600060405180830381865af41580156106ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061071791906138a6565b61197c565b905092915050565b600061028c73__$4c639ca777b976687a95879043001c96f4$__63419e76c19091846040518363ffffffff1660e01b81526004016107639291906138f6565b602060405180830381865af4158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a4919061391f565b9050919050565b6107b36127cd565b6108396102be73__$8ac835ad8d3012be129274ec595ff58680$__6317c850f09091856040518363ffffffff1660e01b81526004016107f392919061394c565b60c060405180830381865af4158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190613a15565b611a4f565b9050919050565b60006102f060029054906101000a900460ff16610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990613ab4565b60405180910390fd5b6102f060009054906101000a900460f01b905090565b600061028c73__$4c639ca777b976687a95879043001c96f4$__63b1abcc4d909185856040518463ffffffff1660e01b81526004016108e993929190613ad4565b602060405180830381865af4158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a919061391f565b905092915050565b60006102be73__$8ac835ad8d3012be129274ec595ff58680$__6379f9712590916040518263ffffffff1660e01b815260040161096f9190613b0b565b602060405180830381865af415801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190613664565b905090565b60006040518060800160405280898152602001888152602001878152602001866109e05760006109e3565b60015b60ff16815250905061028b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fe8c13b858585856040518563ffffffff1660e01b8152600401610a4d9493929190613d2c565b602060405180830381865afa158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e919061391f565b610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac490613de5565b60405180910390fd5b610ad988888888611aa3565b5050505050505050565b606060006102be73__$8ac835ad8d3012be129274ec595ff58680$__6321d60953909186866040518463ffffffff1660e01b8152600401610b26939291906136a7565b600060405180830381865af4158015610b43573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b6c9190613ec8565b90506000815167ffffffffffffffff811115610b8b57610b8a612c25565b5b604051908082528060200260200182016040528015610bc457816020015b610bb16127cd565b815260200190600190039081610ba95790505b50905060005b8251811015610c2757610bf6838281518110610be957610be8613f11565b5b6020026020010151611a4f565b828281518110610c0957610c08613f11565b5b60200260200101819052508080610c1f90613f6f565b915050610bca565b50809250505092915050565b610c3b61277e565b610d4b6102be73__$8ac835ad8d3012be129274ec595ff58680$__635db40cda909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a76040518060200160405280898152506040518263ffffffff1660e01b8152600401610ca29190613634565b602060405180830381865af4158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190613664565b6040518363ffffffff1660e01b8152600401610d0092919061394c565b600060405180830381865af4158015610d1d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d4691906138a6565b61197c565b9050919050565b60008060019054906101000a900460ff16159050808015610d835750600160008054906101000a900460ff1660ff16105b80610db05750610d9230611eb1565b158015610daf5750600160008054906101000a900460ff1660ff16145b5b610def576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de690614029565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610e2c576001600060016101000a81548160ff0219169083151502179055505b8261028b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e7782611ed4565b6102be73__$8ac835ad8d3012be129274ec595ff58680$__639e43b8139091604080518363ffffffff1660e01b8152600401610eb492919061394c565b60006040518083038186803b158015610ecc57600080fd5b505af4158015610ee0573d6000803e3d6000fd5b50505050610eec611f10565b8015610f455760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f3c919061409b565b60405180910390a15b505050565b600061028b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f7d612803565b61100561028c73__$4c639ca777b976687a95879043001c96f4$__63893e9739909186866040518463ffffffff1660e01b8152600401610fbf93929190613ad4565b60e060405180830381865af4158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611000919061416a565b611f69565b905092915050565b611015611fc7565b8061028b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6110626127cd565b6110e86102be73__$8ac835ad8d3012be129274ec595ff58680$__63dc9a7c8c9091856040518363ffffffff1660e01b81526004016110a292919061394c565b60c060405180830381865af41580156110bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e39190613a15565b611a4f565b9050919050565b600061028c73__$4c639ca777b976687a95879043001c96f4$__630e21d5fd9091846040518363ffffffff1660e01b815260040161112e9291906138f6565b602060405180830381865af415801561114b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116f9190613664565b9050919050565b61117e611fc7565b6111886000612045565b565b6000611194612076565b90508073ffffffffffffffffffffffffffffffffffffffff166111b5611719565b73ffffffffffffffffffffffffffffffffffffffff161461120b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120290614209565b60405180910390fd5b61121481612045565b50565b61121f6127cd565b6112a56102be73__$8ac835ad8d3012be129274ec595ff58680$__63dea7633a9091856040518363ffffffff1660e01b815260040161125f92919061394c565b60c060405180830381865af415801561127c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a09190613a15565b611a4f565b9050919050565b600183036113ad5760006112c76112c1610840565b3361207e565b905087811461130b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113029061429b565b60405180910390fd5b60008383905014611351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134890614307565b60405180910390fd5b841561139b576000871461139a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139190614373565b60405180910390fd5b5b6113a788888888611aa3565b506113e8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90614405565b60405180910390fd5b50505050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611423611fc7565b61142c81611ed4565b50565b611437612803565b6114bd61028c73__$4c639ca777b976687a95879043001c96f4$__639da689469091856040518363ffffffff1660e01b81526004016114779291906138f6565b60e060405180830381865af4158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b8919061416a565b611f69565b9050919050565b6114cc61277e565b6115de6102be73__$8ac835ad8d3012be129274ec595ff58680$__6313827136909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a760405180602001604052808a8152506040518263ffffffff1660e01b81526004016115339190613634565b602060405180830381865af4158015611550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115749190613664565b866040518463ffffffff1660e01b8152600401611593939291906136a7565b600060405180830381865af41580156115b0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906115d991906138a6565b61197c565b905092915050565b60006102be60010180549050905090565b6115ff61277e565b6117116102be73__$8ac835ad8d3012be129274ec595ff58680$__6379c17a96909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a760405180602001604052808a8152506040518263ffffffff1660e01b81526004016116669190613634565b602060405180830381865af4158015611683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a79190613664565b866040518463ffffffff1660e01b81526004016116c6939291906136a7565b600060405180830381865af41580156116e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061170c91906138a6565b61197c565b905092915050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600061028c73__$4c639ca777b976687a95879043001c96f4$__6365fe1b5b90918787876040518563ffffffff1660e01b81526004016117889493929190614425565b600060405180830381865af41580156117a5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117ce919061452d565b90506000815167ffffffffffffffff8111156117ed576117ec612c25565b5b60405190808252806020026020018201604052801561182657816020015b611813612803565b81526020019060019003908161180b5790505b50905060005b82518110156118895761185883828151811061184b5761184a613f11565b5b6020026020010151611f69565b82828151811061186b5761186a613f11565b5b6020026020010181905250808061188190613f6f565b91505061182c565b5080925050509392505050565b61189e611fc7565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166118fe6113f1565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6040518060400160405280600581526020017f322e332e3000000000000000000000000000000000000000000000000000000081525081565b61198461277e565b61198c612840565b60005b60408110156119e657836040015181815181106119af576119ae613f11565b5b60200260200101518282604081106119ca576119c9613f11565b5b60200201818152505080806119de90613f6f565b91505061198f565b5060006040518061010001604052808560000151815260200185602001511515815260200183815260200185606001518152602001856080015181526020018560a00151151581526020018560c0015181526020018560e0015181525090508092505050919050565b611a576127cd565b6040518060c0016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a001518152509050919050565b60008403611ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611add906145c2565b60405180910390fd5b60008203611b29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b209061462e565b60405180910390fd5b8015611bec57611b3884610724565b15611b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6f906146c0565b60405180910390fd5b61028c73__$4c639ca777b976687a95879043001c96f4$__634a204218909186866040518463ffffffff1660e01b8152600401611bb793929190613ad4565b60006040518083038186803b158015611bcf57600080fd5b505af4158015611be3573d6000803e3d6000fd5b50505050611cfe565b611bf584610724565b611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90614752565b60405180910390fd5b600061028c73__$4c639ca777b976687a95879043001c96f4$__639da689469091876040518363ffffffff1660e01b8152600401611c739291906138f6565b60e060405180830381865af4158015611c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb4919061416a565b905083816020015114611cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf3906147e4565b60405180910390fd5b505b611d0884836108a8565b15611d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3f90614850565b60405180910390fd5b61028c73__$4c639ca777b976687a95879043001c96f4$__6344cfc45e909186856040518463ffffffff1660e01b8152600401611d8793929190613ad4565b60006040518083038186803b158015611d9f57600080fd5b505af4158015611db3573d6000803e3d6000fd5b505050506102be73__$8ac835ad8d3012be129274ec595ff58680$__63c1d29f01909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a760405180602001604052808a8152506040518263ffffffff1660e01b8152600401611e1b9190613634565b602060405180830381865af4158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5c9190613664565b856040518463ffffffff1660e01b8152600401611e7b939291906136a7565b60006040518083038186803b158015611e9357600080fd5b505af4158015611ea7573d6000803e3d6000fd5b5050505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b806102f060006101000a81548161ffff021916908360f01c021790555060016102f060026101000a81548160ff02191690831515021790555050565b600060019054906101000a900460ff16611f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f56906148e2565b60405180910390fd5b611f676120a7565b565b611f71612803565b6040518060e0016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c001518152509050919050565b611fcf612076565b73ffffffffffffffffffffffffffffffffffffffff16611fed6113f1565b73ffffffffffffffffffffffffffffffffffffffff1614612043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203a9061494e565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561207381612108565b50565b600033905090565b60008061208a836121ce565b905061209e84612099836121ee565b61233a565b91505092915050565b600060019054906101000a900460ff166120f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ed906148e2565b60405180910390fd5b612106612101612076565b612045565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b600081905060087eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216901b60087fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff008316901c17905060107dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216901b60107fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff00008316901c17905060207bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8216901b60207fffffffff00000000ffffffff00000000ffffffff00000000ffffffff000000008316901c179050604077ffffffffffffffff0000000000000000ffffffffffffffff8216901b60407fffffffffffffffff0000000000000000ffffffffffffffff00000000000000008316901c179050608081901b608082901c179050919050565b60008061234e612349846121ee565b612488565b9050600061236b82601b8451612364919061496e565b601b6124e5565b905060006123988660405160200161238391906149c3565b604051602081830303815290604052836124fb565b9050601d8151146123de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d590614a50565b60405180910390fd5b60006123f16123ec8361250f565b6125a9565b90506000816040516020016124069190614ab4565b6040516020818303038152906040529050600061242384836124fb565b9050601f815114612469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246090614b1b565b60405180910390fd5b61247a612475826125c8565b6121ee565b965050505050505092915050565b6060602067ffffffffffffffff8111156124a5576124a4612c25565b5b6040519080825280601f01601f1916602001820160405280156124d75781602001600182028036833780820191505090505b509050816020820152919050565b60606124f28484846125d6565b90509392505050565b606061250783836126f4565b905092915050565b6000601d825114612555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254c90614a50565b60405180910390fd5b60005b82518110156125a35782818151811061257457612573613f11565b5b602001015160f81c60f81b60f81c60ff16826125909190614b3b565b91508061259c90613f6f565b9050612558565b50919050565b600081905060088161ffff16901b60088261ffff16901c179050919050565b600060208201519050919050565b606081601f836125e69190614b71565b1015612627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261e90614bf1565b60405180910390fd5b81836126339190614b71565b84511015612676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266d90614c5d565b60405180910390fd5b606082156000811461269757604051915060008252602082016040526126e8565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156126d557805183526020830192506020810190506126b8565b50868552601f19601f8301166040525050505b50809150509392505050565b6060806040519050835180825260208201818101602087015b8183101561272a578051835260208301925060208101905061270d565b50855192508351830184528091508282019050602086015b8183101561275f5780518352602083019250602081019050612742565b50601f19601f8851850115830101166040525050508091505092915050565b604051806101000160405280600081526020016000151581526020016127a2612840565b8152602001600081526020016000815260200160001515815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806108000160405280604090602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61288a81612877565b811461289557600080fd5b50565b6000813590506128a781612881565b92915050565b600080604083850312156128c4576128c361286d565b5b60006128d285828601612898565b92505060206128e385828601612898565b9150509250929050565b6128f681612877565b82525050565b60008115159050919050565b612911816128fc565b82525050565b600060409050919050565b600081905092915050565b6000819050919050565b600061294383836128ed565b60208301905092915050565b6000602082019050919050565b61296581612917565b61296f8184612922565b925061297a8261292d565b8060005b838110156129ab5781516129928782612937565b965061299d8361294f565b92505060018101905061297e565b505050505050565b6108e0820160008201516129ca60008501826128ed565b5060208201516129dd6020850182612908565b5060408201516129f0604085018261295c565b506060820151612a046108408501826128ed565b506080820151612a186108608501826128ed565b5060a0820151612a2c610880850182612908565b5060c0820151612a406108a08501826128ed565b5060e0820151612a546108c08501826128ed565b50505050565b60006108e082019050612a7060008301846129b3565b92915050565b600060208284031215612a8c57612a8b61286d565b5b6000612a9a84828501612898565b91505092915050565b612aac816128fc565b82525050565b6000602082019050612ac76000830184612aa3565b92915050565b60c082016000820151612ae360008501826128ed565b506020820151612af660208501826128ed565b506040820151612b0960408501826128ed565b506060820151612b1c60608501826128ed565b506080820151612b2f60808501826128ed565b5060a0820151612b4260a08501826128ed565b50505050565b600060c082019050612b5d6000830184612acd565b92915050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b612b9881612b63565b82525050565b6000602082019050612bb36000830184612b8f565b92915050565b612bc281612877565b82525050565b6000602082019050612bdd6000830184612bb9565b92915050565b612bec816128fc565b8114612bf757600080fd5b50565b600081359050612c0981612be3565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612c5d82612c14565b810181811067ffffffffffffffff82111715612c7c57612c7b612c25565b5b80604052505050565b6000612c8f612863565b9050612c9b8282612c54565b919050565b600067ffffffffffffffff821115612cbb57612cba612c25565b5b602082029050919050565b600080fd5b6000612cde612cd984612ca0565b612c85565b90508060208402830185811115612cf857612cf7612cc6565b5b835b81811015612d215780612d0d8882612898565b845260208401935050602081019050612cfa565b5050509392505050565b600082601f830112612d4057612d3f612c0f565b5b6002612d4d848285612ccb565b91505092915050565b600067ffffffffffffffff821115612d7157612d70612c25565b5b602082029050919050565b6000612d8f612d8a84612d56565b612c85565b90508060408402830185811115612da957612da8612cc6565b5b835b81811015612dd25780612dbe8882612d2b565b845260208401935050604081019050612dab565b5050509392505050565b600082601f830112612df157612df0612c0f565b5b6002612dfe848285612d7c565b91505092915050565b6000806000806000806000610180888a031215612e2757612e2661286d565b5b6000612e358a828b01612898565b9750506020612e468a828b01612898565b9650506040612e578a828b01612898565b9550506060612e688a828b01612bfa565b9450506080612e798a828b01612d2b565b93505060c0612e8a8a828b01612ddc565b925050610140612e9c8a828b01612d2b565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60c082016000820151612eed60008501826128ed565b506020820151612f0060208501826128ed565b506040820151612f1360408501826128ed565b506060820151612f2660608501826128ed565b506080820151612f3960808501826128ed565b5060a0820151612f4c60a08501826128ed565b50505050565b6000612f5e8383612ed7565b60c08301905092915050565b6000602082019050919050565b6000612f8282612eab565b612f8c8185612eb6565b9350612f9783612ec7565b8060005b83811015612fc8578151612faf8882612f52565b9750612fba83612f6a565b925050600181019050612f9b565b5085935050505092915050565b60006020820190508181036000830152612fef8184612f77565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061302282612ff7565b9050919050565b600061303482613017565b9050919050565b61304481613029565b811461304f57600080fd5b50565b6000813590506130618161303b565b92915050565b61307081612b63565b811461307b57600080fd5b50565b60008135905061308d81613067565b92915050565b600080604083850312156130aa576130a961286d565b5b60006130b885828601613052565b92505060206130c98582860161307e565b9150509250929050565b6130dc81613017565b82525050565b60006020820190506130f760008301846130d3565b92915050565b60e08201600082015161311360008501826128ed565b50602082015161312660208501826128ed565b50604082015161313960408501826128ed565b50606082015161314c60608501826128ed565b50608082015161315f60808501826128ed565b5060a082015161317260a08501826128ed565b5060c082015161318560c08501826128ed565b50505050565b600060e0820190506131a060008301846130fd565b92915050565b6131af81613017565b81146131ba57600080fd5b50565b6000813590506131cc816131a6565b92915050565b6000602082840312156131e8576131e761286d565b5b60006131f6848285016131bd565b91505092915050565b600080fd5b60008083601f84011261321a57613219612c0f565b5b8235905067ffffffffffffffff811115613237576132366131ff565b5b60208301915083600182028301111561325357613252612cc6565b5b9250929050565b600080600080600080600060c0888a0312156132795761327861286d565b5b60006132878a828b01612898565b97505060206132988a828b01612898565b96505060406132a98a828b01612898565b95505060606132ba8a828b01612bfa565b94505060806132cb8a828b01612898565b93505060a088013567ffffffffffffffff8111156132ec576132eb612872565b5b6132f88a828b01613204565b925092505092959891949750929550565b60006020828403121561331f5761331e61286d565b5b600061332d8482850161307e565b91505092915050565b60008060006060848603121561334f5761334e61286d565b5b600061335d86828701612898565b935050602061336e86828701612898565b925050604061337f86828701612898565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e0820160008201516133cb60008501826128ed565b5060208201516133de60208501826128ed565b5060408201516133f160408501826128ed565b50606082015161340460608501826128ed565b50608082015161341760808501826128ed565b5060a082015161342a60a08501826128ed565b5060c082015161343d60c08501826128ed565b50505050565b600061344f83836133b5565b60e08301905092915050565b6000602082019050919050565b600061347382613389565b61347d8185613394565b9350613488836133a5565b8060005b838110156134b95781516134a08882613443565b97506134ab8361345b565b92505060018101905061348c565b5085935050505092915050565b600060208201905081810360008301526134e08184613468565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613522578082015181840152602081019050613507565b60008484015250505050565b6000613539826134e8565b61354381856134f3565b9350613553818560208601613504565b61355c81612c14565b840191505092915050565b60006020820190508181036000830152613581818461352e565b905092915050565b600060019050919050565b600081905092915050565b6000819050919050565b6135b281612877565b82525050565b60006135c483836135a9565b60208301905092915050565b6000602082019050919050565b6135e681613589565b6135f08184613594565b92506135fb8261359f565b8060005b8381101561362c57815161361387826135b8565b965061361e836135d0565b9250506001810190506135ff565b505050505050565b600060208201905061364960008301846135dd565b92915050565b60008151905061365e81612881565b92915050565b60006020828403121561367a5761367961286d565b5b60006136888482850161364f565b91505092915050565b8082525050565b6136a181612877565b82525050565b60006060820190506136bc6000830186613691565b6136c96020830185613698565b6136d66040830184613698565b949350505050565b600080fd5b600080fd5b6000815190506136f781612be3565b92915050565b600067ffffffffffffffff82111561371857613717612c25565b5b602082029050602081019050919050565b600061373c613737846136fd565b612c85565b9050808382526020820190506020840283018581111561375f5761375e612cc6565b5b835b818110156137885780613774888261364f565b845260208401935050602081019050613761565b5050509392505050565b600082601f8301126137a7576137a6612c0f565b5b81516137b7848260208601613729565b91505092915050565b600061010082840312156137d7576137d66136de565b5b6137e2610100612c85565b905060006137f28482850161364f565b6000830152506020613806848285016136e8565b602083015250604082015167ffffffffffffffff81111561382a576138296136e3565b5b61383684828501613792565b604083015250606061384a8482850161364f565b606083015250608061385e8482850161364f565b60808301525060a0613872848285016136e8565b60a08301525060c06138868482850161364f565b60c08301525060e061389a8482850161364f565b60e08301525092915050565b6000602082840312156138bc576138bb61286d565b5b600082015167ffffffffffffffff8111156138da576138d9612872565b5b6138e6848285016137c0565b91505092915050565b8082525050565b600060408201905061390b60008301856138ef565b6139186020830184613698565b9392505050565b6000602082840312156139355761393461286d565b5b6000613943848285016136e8565b91505092915050565b60006040820190506139616000830185613691565b61396e6020830184613698565b9392505050565b600060c0828403121561398b5761398a6136de565b5b61399560c0612c85565b905060006139a58482850161364f565b60008301525060206139b98482850161364f565b60208301525060406139cd8482850161364f565b60408301525060606139e18482850161364f565b60608301525060806139f58482850161364f565b60808301525060a0613a098482850161364f565b60a08301525092915050565b600060c08284031215613a2b57613a2a61286d565b5b6000613a3984828501613975565b91505092915050565b7f44656661756c742049642054797065206973206e6f7420696e697469616c697a60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000613a9e6022836134f3565b9150613aa982613a42565b604082019050919050565b60006020820190508181036000830152613acd81613a91565b9050919050565b6000606082019050613ae960008301866138ef565b613af66020830185613698565b613b036040830184613698565b949350505050565b6000602082019050613b206000830184613691565b92915050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b613b5c81613b26565b613b668184613b31565b9250613b7182613b3c565b8060005b83811015613ba2578151613b898782612937565b9650613b9483613b46565b925050600181019050613b75565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b600081905092915050565b613bde81613b26565b613be88184613bca565b9250613bf382613b3c565b8060005b83811015613c24578151613c0b8782612937565b9650613c1683613b46565b925050600181019050613bf7565b505050505050565b6000613c388383613bd5565b60408301905092915050565b6000602082019050919050565b613c5a81613baa565b613c648184613bb5565b9250613c6f82613bc0565b8060005b83811015613ca0578151613c878782613c2c565b9650613c9283613c44565b925050600181019050613c73565b505050505050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b613cde81613ca8565b613ce88184613cb3565b9250613cf382613cbe565b8060005b83811015613d24578151613d0b8782612937565b9650613d1683613cc8565b925050600181019050613cf7565b505050505050565b600061018082019050613d426000830187613b53565b613d4f6040830186613c51565b613d5c60c0830185613b53565b613d6a610100830184613cd5565b95945050505050565b7f5a65726f2d6b6e6f776c656467652070726f6f66206f6620737461746520747260008201527f616e736974696f6e206973206e6f742076616c69640000000000000000000000602082015250565b6000613dcf6035836134f3565b9150613dda82613d73565b604082019050919050565b60006020820190508181036000830152613dfe81613dc2565b9050919050565b600067ffffffffffffffff821115613e2057613e1f612c25565b5b602082029050602081019050919050565b6000613e44613e3f84613e05565b612c85565b90508083825260208201905060c08402830185811115613e6757613e66612cc6565b5b835b81811015613e905780613e7c8882613975565b84526020840193505060c081019050613e69565b5050509392505050565b600082601f830112613eaf57613eae612c0f565b5b8151613ebf848260208601613e31565b91505092915050565b600060208284031215613ede57613edd61286d565b5b600082015167ffffffffffffffff811115613efc57613efb612872565b5b613f0884828501613e9a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f7a82612877565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fac57613fab613f40565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614013602e836134f3565b915061401e82613fb7565b604082019050919050565b6000602082019050818103600083015261404281614006565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061408561408061407b84614049565b614060565b614053565b9050919050565b6140958161406a565b82525050565b60006020820190506140b0600083018461408c565b92915050565b600060e082840312156140cc576140cb6136de565b5b6140d660e0612c85565b905060006140e68482850161364f565b60008301525060206140fa8482850161364f565b602083015250604061410e8482850161364f565b60408301525060606141228482850161364f565b60608301525060806141368482850161364f565b60808301525060a061414a8482850161364f565b60a08301525060c061415e8482850161364f565b60c08301525092915050565b600060e082840312156141805761417f61286d565b5b600061418e848285016140b6565b91505092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b60006141f36029836134f3565b91506141fe82614197565b604082019050919050565b60006020820190508181036000830152614222816141e6565b9050919050565b7f6d73672e73656e646572206973206e6f74206f776e6572206f6620746865206960008201527f64656e7469747900000000000000000000000000000000000000000000000000602082015250565b60006142856027836134f3565b915061429082614229565b604082019050919050565b600060208201905081810360008301526142b481614278565b9050919050565b7f6d6574686f64506172616d732073686f756c6420626520656d70747900000000600082015250565b60006142f1601c836134f3565b91506142fc826142bb565b602082019050919050565b60006020820190508181036000830152614320816142e4565b9050919050565b7f4f6c642073746174652073686f756c64206265207a65726f0000000000000000600082015250565b600061435d6018836134f3565b915061436882614327565b602082019050919050565b6000602082019050818103600083015261438c81614350565b9050919050565b7f556e6b6e6f776e207374617465207472616e736974696f6e206d6574686f642060008201527f6964000000000000000000000000000000000000000000000000000000000000602082015250565b60006143ef6022836134f3565b91506143fa82614393565b604082019050919050565b6000602082019050818103600083015261441e816143e2565b9050919050565b600060808201905061443a60008301876138ef565b6144476020830186613698565b6144546040830185613698565b6144616060830184613698565b95945050505050565b600067ffffffffffffffff82111561448557614484612c25565b5b602082029050602081019050919050565b60006144a96144a48461446a565b612c85565b90508083825260208201905060e084028301858111156144cc576144cb612cc6565b5b835b818110156144f557806144e188826140b6565b84526020840193505060e0810190506144ce565b5050509392505050565b600082601f83011261451457614513612c0f565b5b8151614524848260208601614496565b91505092915050565b6000602082840312156145435761454261286d565b5b600082015167ffffffffffffffff81111561456157614560612872565b5b61456d848285016144ff565b91505092915050565b7f49442073686f756c64206e6f74206265207a65726f0000000000000000000000600082015250565b60006145ac6015836134f3565b91506145b782614576565b602082019050919050565b600060208201905081810360008301526145db8161459f565b9050919050565b7f4e65772073746174652073686f756c64206e6f74206265207a65726f00000000600082015250565b6000614618601c836134f3565b9150614623826145e2565b602082019050919050565b600060208201905081810360008301526146478161460b565b9050919050565b7f4f6c642073746174652069732067656e6573697320627574206964656e74697460008201527f7920616c72656164792065786973747300000000000000000000000000000000602082015250565b60006146aa6030836134f3565b91506146b58261464e565b604082019050919050565b600060208201905081810360008301526146d98161469d565b9050919050565b7f4f6c64207374617465206973206e6f742067656e65736973206275742069646560008201527f6e7469747920646f6573206e6f74207965742065786973740000000000000000602082015250565b600061473c6038836134f3565b9150614747826146e0565b604082019050919050565b6000602082019050818103600083015261476b8161472f565b9050919050565b7f4f6c6420737461746520646f6573206e6f74206d6174636820746865206c617460008201527f6573742073746174650000000000000000000000000000000000000000000000602082015250565b60006147ce6029836134f3565b91506147d982614772565b604082019050919050565b600060208201905081810360008301526147fd816147c1565b9050919050565b7f4e657720737461746520616c7265616479206578697374730000000000000000600082015250565b600061483a6018836134f3565b915061484582614804565b602082019050919050565b600060208201905081810360008301526148698161482d565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006148cc602b836134f3565b91506148d782614870565b604082019050919050565b600060208201905081810360008301526148fb816148bf565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006149386020836134f3565b915061494382614902565b602082019050919050565b600060208201905081810360008301526149678161492b565b9050919050565b600061497982612877565b915061498483612877565b925082820390508181111561499c5761499b613f40565b5b92915050565b6000819050919050565b6149bd6149b882612b63565b6149a2565b82525050565b60006149cf82846149ac565b60028201915081905092915050565b7f436865636b73756d207265717569726573203239206c656e677468206172726160008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b6000614a3a6021836134f3565b9150614a45826149de565b604082019050919050565b60006020820190508181036000830152614a6981614a2d565b9050919050565b600061ffff82169050919050565b60008160f01b9050919050565b6000614a9682614a7e565b9050919050565b614aae614aa982614a70565b614a8b565b82525050565b6000614ac08284614a9d565b60028201915081905092915050565b7f69644279746573207265717569726573203331206c656e677468206172726179600082015250565b6000614b056020836134f3565b9150614b1082614acf565b602082019050919050565b60006020820190508181036000830152614b3481614af8565b9050919050565b6000614b4682614a70565b9150614b5183614a70565b9250828201905061ffff811115614b6b57614b6a613f40565b5b92915050565b6000614b7c82612877565b9150614b8783612877565b9250828201905080821115614b9f57614b9e613f40565b5b92915050565b7f736c6963655f6f766572666c6f77000000000000000000000000000000000000600082015250565b6000614bdb600e836134f3565b9150614be682614ba5565b602082019050919050565b60006020820190508181036000830152614c0a81614bce565b9050919050565b7f736c6963655f6f75744f66426f756e6473000000000000000000000000000000600082015250565b6000614c476011836134f3565b9150614c5282614c11565b602082019050919050565b60006020820190508181036000830152614c7681614c3a565b905091905056fea2646970667358221220e77aa2aa2551a36ed5c725ebdc2e4c30062b6b87792e5e8e5e0bd7437ff1d33b64736f6c63430008100033",
}

// StateABI is the input ABI used to generate the binding from.
// Deprecated: Use StateMetaData.ABI instead.
var StateABI = StateMetaData.ABI

// StateBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use StateMetaData.Bin instead.
var StateBin = StateMetaData.Bin

// DeployState deploys a new Ethereum contract, binding an instance of State to it.
func DeployState(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *State, error) {
	parsed, err := StateMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(StateBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &State{StateCaller: StateCaller{contract: contract}, StateTransactor: StateTransactor{contract: contract}, StateFilterer: StateFilterer{contract: contract}}, nil
}

// State is an auto generated Go binding around an Ethereum contract.
type State struct {
	StateCaller     // Read-only binding to the contract
	StateTransactor // Write-only binding to the contract
	StateFilterer   // Log filterer for contract events
}

// StateCaller is an auto generated read-only Go binding around an Ethereum contract.
type StateCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StateTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StateFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type StateSession struct {
	Contract     *State            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StateCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type StateCallerSession struct {
	Contract *StateCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// StateTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type StateTransactorSession struct {
	Contract     *StateTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StateRaw is an auto generated low-level Go binding around an Ethereum contract.
type StateRaw struct {
	Contract *State // Generic contract binding to access the raw methods on
}

// StateCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type StateCallerRaw struct {
	Contract *StateCaller // Generic read-only contract binding to access the raw methods on
}

// StateTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type StateTransactorRaw struct {
	Contract *StateTransactor // Generic write-only contract binding to access the raw methods on
}

// NewState creates a new instance of State, bound to a specific deployed contract.
func NewState(address common.Address, backend bind.ContractBackend) (*State, error) {
	contract, err := bindState(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &State{StateCaller: StateCaller{contract: contract}, StateTransactor: StateTransactor{contract: contract}, StateFilterer: StateFilterer{contract: contract}}, nil
}

// NewStateCaller creates a new read-only instance of State, bound to a specific deployed contract.
func NewStateCaller(address common.Address, caller bind.ContractCaller) (*StateCaller, error) {
	contract, err := bindState(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &StateCaller{contract: contract}, nil
}

// NewStateTransactor creates a new write-only instance of State, bound to a specific deployed contract.
func NewStateTransactor(address common.Address, transactor bind.ContractTransactor) (*StateTransactor, error) {
	contract, err := bindState(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &StateTransactor{contract: contract}, nil
}

// NewStateFilterer creates a new log filterer instance of State, bound to a specific deployed contract.
func NewStateFilterer(address common.Address, filterer bind.ContractFilterer) (*StateFilterer, error) {
	contract, err := bindState(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &StateFilterer{contract: contract}, nil
}

// bindState binds a generic wrapper to an already deployed contract.
func bindState(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := StateMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_State *StateRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _State.Contract.StateCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_State *StateRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.Contract.StateTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_State *StateRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _State.Contract.StateTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_State *StateCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _State.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_State *StateTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_State *StateTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _State.Contract.contract.Transact(opts, method, params...)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_State *StateCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_State *StateSession) VERSION() (string, error) {
	return _State.Contract.VERSION(&_State.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_State *StateCallerSession) VERSION() (string, error) {
	return _State.Contract.VERSION(&_State.CallOpts)
}

// GetDefaultIdType is a free data retrieval call binding the contract method 0x133fe385.
//
// Solidity: function getDefaultIdType() view returns(bytes2)
func (_State *StateCaller) GetDefaultIdType(opts *bind.CallOpts) ([2]byte, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getDefaultIdType")

	if err != nil {
		return *new([2]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([2]byte)).(*[2]byte)

	return out0, err

}

// GetDefaultIdType is a free data retrieval call binding the contract method 0x133fe385.
//
// Solidity: function getDefaultIdType() view returns(bytes2)
func (_State *StateSession) GetDefaultIdType() ([2]byte, error) {
	return _State.Contract.GetDefaultIdType(&_State.CallOpts)
}

// GetDefaultIdType is a free data retrieval call binding the contract method 0x133fe385.
//
// Solidity: function getDefaultIdType() view returns(bytes2)
func (_State *StateCallerSession) GetDefaultIdType() ([2]byte, error) {
	return _State.Contract.GetDefaultIdType(&_State.CallOpts)
}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProof(opts *bind.CallOpts, id *big.Int) (IStateGistProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProof", id)

	if err != nil {
		return *new(IStateGistProof), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistProof)).(*IStateGistProof)

	return out0, err

}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProof(id *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProof(&_State.CallOpts, id)
}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProof(id *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProof(&_State.CallOpts, id)
}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByBlock(opts *bind.CallOpts, id *big.Int, blockNumber *big.Int) (IStateGistProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByBlock", id, blockNumber)

	if err != nil {
		return *new(IStateGistProof), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistProof)).(*IStateGistProof)

	return out0, err

}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByBlock(id *big.Int, blockNumber *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByBlock(&_State.CallOpts, id, blockNumber)
}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByBlock(id *big.Int, blockNumber *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByBlock(&_State.CallOpts, id, blockNumber)
}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByRoot(opts *bind.CallOpts, id *big.Int, root *big.Int) (IStateGistProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByRoot", id, root)

	if err != nil {
		return *new(IStateGistProof), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistProof)).(*IStateGistProof)

	return out0, err

}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByRoot(id *big.Int, root *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByRoot(&_State.CallOpts, id, root)
}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByRoot(id *big.Int, root *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByRoot(&_State.CallOpts, id, root)
}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByTime(opts *bind.CallOpts, id *big.Int, timestamp *big.Int) (IStateGistProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByTime", id, timestamp)

	if err != nil {
		return *new(IStateGistProof), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistProof)).(*IStateGistProof)

	return out0, err

}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByTime(id *big.Int, timestamp *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByTime(&_State.CallOpts, id, timestamp)
}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[64],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByTime(id *big.Int, timestamp *big.Int) (IStateGistProof, error) {
	return _State.Contract.GetGISTProofByTime(&_State.CallOpts, id, timestamp)
}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateCaller) GetGISTRoot(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRoot")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateSession) GetGISTRoot() (*big.Int, error) {
	return _State.Contract.GetGISTRoot(&_State.CallOpts)
}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateCallerSession) GetGISTRoot() (*big.Int, error) {
	return _State.Contract.GetGISTRoot(&_State.CallOpts)
}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCaller) GetGISTRootHistory(opts *bind.CallOpts, start *big.Int, length *big.Int) ([]IStateGistRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootHistory", start, length)

	if err != nil {
		return *new([]IStateGistRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]IStateGistRootInfo)).(*[]IStateGistRootInfo)

	return out0, err

}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateSession) GetGISTRootHistory(start *big.Int, length *big.Int) ([]IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootHistory(&_State.CallOpts, start, length)
}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCallerSession) GetGISTRootHistory(start *big.Int, length *big.Int) ([]IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootHistory(&_State.CallOpts, start, length)
}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateCaller) GetGISTRootHistoryLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootHistoryLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateSession) GetGISTRootHistoryLength() (*big.Int, error) {
	return _State.Contract.GetGISTRootHistoryLength(&_State.CallOpts)
}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateCallerSession) GetGISTRootHistoryLength() (*big.Int, error) {
	return _State.Contract.GetGISTRootHistoryLength(&_State.CallOpts)
}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfo(opts *bind.CallOpts, root *big.Int) (IStateGistRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfo", root)

	if err != nil {
		return *new(IStateGistRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistRootInfo)).(*IStateGistRootInfo)

	return out0, err

}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfo(root *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfo(&_State.CallOpts, root)
}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfo(root *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfo(&_State.CallOpts, root)
}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfoByBlock(opts *bind.CallOpts, blockNumber *big.Int) (IStateGistRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfoByBlock", blockNumber)

	if err != nil {
		return *new(IStateGistRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistRootInfo)).(*IStateGistRootInfo)

	return out0, err

}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfoByBlock(blockNumber *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByBlock(&_State.CallOpts, blockNumber)
}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfoByBlock(blockNumber *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByBlock(&_State.CallOpts, blockNumber)
}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfoByTime(opts *bind.CallOpts, timestamp *big.Int) (IStateGistRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfoByTime", timestamp)

	if err != nil {
		return *new(IStateGistRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateGistRootInfo)).(*IStateGistRootInfo)

	return out0, err

}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfoByTime(timestamp *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByTime(&_State.CallOpts, timestamp)
}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfoByTime(timestamp *big.Int) (IStateGistRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByTime(&_State.CallOpts, timestamp)
}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetStateInfoById(opts *bind.CallOpts, id *big.Int) (IStateStateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoById", id)

	if err != nil {
		return *new(IStateStateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateStateInfo)).(*IStateStateInfo)

	return out0, err

}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetStateInfoById(id *big.Int) (IStateStateInfo, error) {
	return _State.Contract.GetStateInfoById(&_State.CallOpts, id)
}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetStateInfoById(id *big.Int) (IStateStateInfo, error) {
	return _State.Contract.GetStateInfoById(&_State.CallOpts, id)
}

// GetStateInfoByIdAndState is a free data retrieval call binding the contract method 0x53c87312.
//
// Solidity: function getStateInfoByIdAndState(uint256 id, uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetStateInfoByIdAndState(opts *bind.CallOpts, id *big.Int, state *big.Int) (IStateStateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoByIdAndState", id, state)

	if err != nil {
		return *new(IStateStateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IStateStateInfo)).(*IStateStateInfo)

	return out0, err

}

// GetStateInfoByIdAndState is a free data retrieval call binding the contract method 0x53c87312.
//
// Solidity: function getStateInfoByIdAndState(uint256 id, uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetStateInfoByIdAndState(id *big.Int, state *big.Int) (IStateStateInfo, error) {
	return _State.Contract.GetStateInfoByIdAndState(&_State.CallOpts, id, state)
}

// GetStateInfoByIdAndState is a free data retrieval call binding the contract method 0x53c87312.
//
// Solidity: function getStateInfoByIdAndState(uint256 id, uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetStateInfoByIdAndState(id *big.Int, state *big.Int) (IStateStateInfo, error) {
	return _State.Contract.GetStateInfoByIdAndState(&_State.CallOpts, id, state)
}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCaller) GetStateInfoHistoryById(opts *bind.CallOpts, id *big.Int, startIndex *big.Int, length *big.Int) ([]IStateStateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoHistoryById", id, startIndex, length)

	if err != nil {
		return *new([]IStateStateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]IStateStateInfo)).(*[]IStateStateInfo)

	return out0, err

}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateSession) GetStateInfoHistoryById(id *big.Int, startIndex *big.Int, length *big.Int) ([]IStateStateInfo, error) {
	return _State.Contract.GetStateInfoHistoryById(&_State.CallOpts, id, startIndex, length)
}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCallerSession) GetStateInfoHistoryById(id *big.Int, startIndex *big.Int, length *big.Int) ([]IStateStateInfo, error) {
	return _State.Contract.GetStateInfoHistoryById(&_State.CallOpts, id, startIndex, length)
}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateCaller) GetStateInfoHistoryLengthById(opts *bind.CallOpts, id *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoHistoryLengthById", id)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateSession) GetStateInfoHistoryLengthById(id *big.Int) (*big.Int, error) {
	return _State.Contract.GetStateInfoHistoryLengthById(&_State.CallOpts, id)
}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateCallerSession) GetStateInfoHistoryLengthById(id *big.Int) (*big.Int, error) {
	return _State.Contract.GetStateInfoHistoryLengthById(&_State.CallOpts, id)
}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateCaller) GetVerifier(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getVerifier")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateSession) GetVerifier() (common.Address, error) {
	return _State.Contract.GetVerifier(&_State.CallOpts)
}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateCallerSession) GetVerifier() (common.Address, error) {
	return _State.Contract.GetVerifier(&_State.CallOpts)
}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateCaller) IdExists(opts *bind.CallOpts, id *big.Int) (bool, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "idExists", id)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateSession) IdExists(id *big.Int) (bool, error) {
	return _State.Contract.IdExists(&_State.CallOpts, id)
}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateCallerSession) IdExists(id *big.Int) (bool, error) {
	return _State.Contract.IdExists(&_State.CallOpts, id)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateSession) Owner() (common.Address, error) {
	return _State.Contract.Owner(&_State.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateCallerSession) Owner() (common.Address, error) {
	return _State.Contract.Owner(&_State.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_State *StateCaller) PendingOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "pendingOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_State *StateSession) PendingOwner() (common.Address, error) {
	return _State.Contract.PendingOwner(&_State.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_State *StateCallerSession) PendingOwner() (common.Address, error) {
	return _State.Contract.PendingOwner(&_State.CallOpts)
}

// StateExists is a free data retrieval call binding the contract method 0x233a4d23.
//
// Solidity: function stateExists(uint256 id, uint256 state) view returns(bool)
func (_State *StateCaller) StateExists(opts *bind.CallOpts, id *big.Int, state *big.Int) (bool, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "stateExists", id, state)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StateExists is a free data retrieval call binding the contract method 0x233a4d23.
//
// Solidity: function stateExists(uint256 id, uint256 state) view returns(bool)
func (_State *StateSession) StateExists(id *big.Int, state *big.Int) (bool, error) {
	return _State.Contract.StateExists(&_State.CallOpts, id, state)
}

// StateExists is a free data retrieval call binding the contract method 0x233a4d23.
//
// Solidity: function stateExists(uint256 id, uint256 state) view returns(bool)
func (_State *StateCallerSession) StateExists(id *big.Int, state *big.Int) (bool, error) {
	return _State.Contract.StateExists(&_State.CallOpts, id, state)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_State *StateTransactor) AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "acceptOwnership")
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_State *StateSession) AcceptOwnership() (*types.Transaction, error) {
	return _State.Contract.AcceptOwnership(&_State.TransactOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_State *StateTransactorSession) AcceptOwnership() (*types.Transaction, error) {
	return _State.Contract.AcceptOwnership(&_State.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x406e8b4c.
//
// Solidity: function initialize(address verifierContractAddr, bytes2 defaultIdType) returns()
func (_State *StateTransactor) Initialize(opts *bind.TransactOpts, verifierContractAddr common.Address, defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "initialize", verifierContractAddr, defaultIdType)
}

// Initialize is a paid mutator transaction binding the contract method 0x406e8b4c.
//
// Solidity: function initialize(address verifierContractAddr, bytes2 defaultIdType) returns()
func (_State *StateSession) Initialize(verifierContractAddr common.Address, defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.Contract.Initialize(&_State.TransactOpts, verifierContractAddr, defaultIdType)
}

// Initialize is a paid mutator transaction binding the contract method 0x406e8b4c.
//
// Solidity: function initialize(address verifierContractAddr, bytes2 defaultIdType) returns()
func (_State *StateTransactorSession) Initialize(verifierContractAddr common.Address, defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.Contract.Initialize(&_State.TransactOpts, verifierContractAddr, defaultIdType)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateSession) RenounceOwnership() (*types.Transaction, error) {
	return _State.Contract.RenounceOwnership(&_State.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _State.Contract.RenounceOwnership(&_State.TransactOpts)
}

// SetDefaultIdType is a paid mutator transaction binding the contract method 0xa7c57eeb.
//
// Solidity: function setDefaultIdType(bytes2 defaultIdType) returns()
func (_State *StateTransactor) SetDefaultIdType(opts *bind.TransactOpts, defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "setDefaultIdType", defaultIdType)
}

// SetDefaultIdType is a paid mutator transaction binding the contract method 0xa7c57eeb.
//
// Solidity: function setDefaultIdType(bytes2 defaultIdType) returns()
func (_State *StateSession) SetDefaultIdType(defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.Contract.SetDefaultIdType(&_State.TransactOpts, defaultIdType)
}

// SetDefaultIdType is a paid mutator transaction binding the contract method 0xa7c57eeb.
//
// Solidity: function setDefaultIdType(bytes2 defaultIdType) returns()
func (_State *StateTransactorSession) SetDefaultIdType(defaultIdType [2]byte) (*types.Transaction, error) {
	return _State.Contract.SetDefaultIdType(&_State.TransactOpts, defaultIdType)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateTransactor) SetVerifier(opts *bind.TransactOpts, newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "setVerifier", newVerifierAddr)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateSession) SetVerifier(newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.SetVerifier(&_State.TransactOpts, newVerifierAddr)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateTransactorSession) SetVerifier(newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.SetVerifier(&_State.TransactOpts, newVerifierAddr)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _State.Contract.TransferOwnership(&_State.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _State.Contract.TransferOwnership(&_State.TransactOpts, newOwner)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateTransactor) TransitState(opts *bind.TransactOpts, id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "transitState", id, oldState, newState, isOldStateGenesis, a, b, c)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateSession) TransitState(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.Contract.TransitState(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, a, b, c)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateTransactorSession) TransitState(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.Contract.TransitState(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, a, b, c)
}

// TransitStateGeneric is a paid mutator transaction binding the contract method 0x7d0dcba5.
//
// Solidity: function transitStateGeneric(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256 methodId, bytes methodParams) returns()
func (_State *StateTransactor) TransitStateGeneric(opts *bind.TransactOpts, id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, methodId *big.Int, methodParams []byte) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "transitStateGeneric", id, oldState, newState, isOldStateGenesis, methodId, methodParams)
}

// TransitStateGeneric is a paid mutator transaction binding the contract method 0x7d0dcba5.
//
// Solidity: function transitStateGeneric(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256 methodId, bytes methodParams) returns()
func (_State *StateSession) TransitStateGeneric(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, methodId *big.Int, methodParams []byte) (*types.Transaction, error) {
	return _State.Contract.TransitStateGeneric(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, methodId, methodParams)
}

// TransitStateGeneric is a paid mutator transaction binding the contract method 0x7d0dcba5.
//
// Solidity: function transitStateGeneric(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256 methodId, bytes methodParams) returns()
func (_State *StateTransactorSession) TransitStateGeneric(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, methodId *big.Int, methodParams []byte) (*types.Transaction, error) {
	return _State.Contract.TransitStateGeneric(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, methodId, methodParams)
}

// StateInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the State contract.
type StateInitializedIterator struct {
	Event *StateInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateInitialized represents a Initialized event raised by the State contract.
type StateInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) FilterInitialized(opts *bind.FilterOpts) (*StateInitializedIterator, error) {

	logs, sub, err := _State.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &StateInitializedIterator{contract: _State.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *StateInitialized) (event.Subscription, error) {

	logs, sub, err := _State.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateInitialized)
				if err := _State.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) ParseInitialized(log types.Log) (*StateInitialized, error) {
	event := new(StateInitialized)
	if err := _State.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// StateOwnershipTransferStartedIterator is returned from FilterOwnershipTransferStarted and is used to iterate over the raw logs and unpacked data for OwnershipTransferStarted events raised by the State contract.
type StateOwnershipTransferStartedIterator struct {
	Event *StateOwnershipTransferStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateOwnershipTransferStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateOwnershipTransferStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateOwnershipTransferStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateOwnershipTransferStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateOwnershipTransferStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateOwnershipTransferStarted represents a OwnershipTransferStarted event raised by the State contract.
type StateOwnershipTransferStarted struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferStarted is a free log retrieval operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) FilterOwnershipTransferStarted(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*StateOwnershipTransferStartedIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.FilterLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &StateOwnershipTransferStartedIterator{contract: _State.contract, event: "OwnershipTransferStarted", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferStarted is a free log subscription operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) WatchOwnershipTransferStarted(opts *bind.WatchOpts, sink chan<- *StateOwnershipTransferStarted, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.WatchLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateOwnershipTransferStarted)
				if err := _State.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferStarted is a log parse operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) ParseOwnershipTransferStarted(log types.Log) (*StateOwnershipTransferStarted, error) {
	event := new(StateOwnershipTransferStarted)
	if err := _State.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// StateOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the State contract.
type StateOwnershipTransferredIterator struct {
	Event *StateOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateOwnershipTransferred represents a OwnershipTransferred event raised by the State contract.
type StateOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*StateOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &StateOwnershipTransferredIterator{contract: _State.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *StateOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateOwnershipTransferred)
				if err := _State.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) ParseOwnershipTransferred(log types.Log) (*StateOwnershipTransferred, error) {
	event := new(StateOwnershipTransferred)
	if err := _State.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
