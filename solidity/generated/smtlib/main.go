// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package smtlib

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SmtlibMetaData contains all meta data concerning the Smtlib contract.
var SmtlibMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"MAX_DEPTH_HARD_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_INFO_LIST_RETURN_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "$8729263a95f1af1a779e9e17f19d7206ca$__6325cc70e8826040518263ffffffff1660e01b8152600401611d429190612e23565b602060405180830381865af4158015611d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d839190612e53565b915050611e52565b600280811115611d9e57611d9d612494565b5b83600001516002811115611db557611db4612494565b5b03611e515773__$8c9bdaf1689fe885300f016d553887f6b1$",
}

// SmtlibABI is the input ABI used to generate the binding from.
// Deprecated: Use SmtlibMetaData.ABI instead.
var SmtlibABI = SmtlibMetaData.ABI

// SmtlibBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SmtlibMetaData.Bin instead.
var SmtlibBin = SmtlibMetaData.Bin

// DeploySmtlib deploys a new Ethereum contract, binding an instance of Smtlib to it.
func DeploySmtlib(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Smtlib, error) {
	parsed, err := SmtlibMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SmtlibBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Smtlib{SmtlibCaller: SmtlibCaller{contract: contract}, SmtlibTransactor: SmtlibTransactor{contract: contract}, SmtlibFilterer: SmtlibFilterer{contract: contract}}, nil
}

// Smtlib is an auto generated Go binding around an Ethereum contract.
type Smtlib struct {
	SmtlibCaller     // Read-only binding to the contract
	SmtlibTransactor // Write-only binding to the contract
	SmtlibFilterer   // Log filterer for contract events
}

// SmtlibCaller is an auto generated read-only Go binding around an Ethereum contract.
type SmtlibCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmtlibTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SmtlibTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmtlibFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SmtlibFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmtlibSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SmtlibSession struct {
	Contract     *Smtlib           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SmtlibCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SmtlibCallerSession struct {
	Contract *SmtlibCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SmtlibTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SmtlibTransactorSession struct {
	Contract     *SmtlibTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SmtlibRaw is an auto generated low-level Go binding around an Ethereum contract.
type SmtlibRaw struct {
	Contract *Smtlib // Generic contract binding to access the raw methods on
}

// SmtlibCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SmtlibCallerRaw struct {
	Contract *SmtlibCaller // Generic read-only contract binding to access the raw methods on
}

// SmtlibTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SmtlibTransactorRaw struct {
	Contract *SmtlibTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSmtlib creates a new instance of Smtlib, bound to a specific deployed contract.
func NewSmtlib(address common.Address, backend bind.ContractBackend) (*Smtlib, error) {
	contract, err := bindSmtlib(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Smtlib{SmtlibCaller: SmtlibCaller{contract: contract}, SmtlibTransactor: SmtlibTransactor{contract: contract}, SmtlibFilterer: SmtlibFilterer{contract: contract}}, nil
}

// NewSmtlibCaller creates a new read-only instance of Smtlib, bound to a specific deployed contract.
func NewSmtlibCaller(address common.Address, caller bind.ContractCaller) (*SmtlibCaller, error) {
	contract, err := bindSmtlib(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SmtlibCaller{contract: contract}, nil
}

// NewSmtlibTransactor creates a new write-only instance of Smtlib, bound to a specific deployed contract.
func NewSmtlibTransactor(address common.Address, transactor bind.ContractTransactor) (*SmtlibTransactor, error) {
	contract, err := bindSmtlib(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SmtlibTransactor{contract: contract}, nil
}

// NewSmtlibFilterer creates a new log filterer instance of Smtlib, bound to a specific deployed contract.
func NewSmtlibFilterer(address common.Address, filterer bind.ContractFilterer) (*SmtlibFilterer, error) {
	contract, err := bindSmtlib(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SmtlibFilterer{contract: contract}, nil
}

// bindSmtlib binds a generic wrapper to an already deployed contract.
func bindSmtlib(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SmtlibMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Smtlib *SmtlibRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Smtlib.Contract.SmtlibCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Smtlib *SmtlibRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smtlib.Contract.SmtlibTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Smtlib *SmtlibRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Smtlib.Contract.SmtlibTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Smtlib *SmtlibCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Smtlib.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Smtlib *SmtlibTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smtlib.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Smtlib *SmtlibTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Smtlib.Contract.contract.Transact(opts, method, params...)
}

// MAXDEPTHHARDCAP is a free data retrieval call binding the contract method 0xa751be24.
//
// Solidity: function MAX_DEPTH_HARD_CAP() view returns(uint256)
func (_Smtlib *SmtlibCaller) MAXDEPTHHARDCAP(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Smtlib.contract.Call(opts, &out, "MAX_DEPTH_HARD_CAP")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXDEPTHHARDCAP is a free data retrieval call binding the contract method 0xa751be24.
//
// Solidity: function MAX_DEPTH_HARD_CAP() view returns(uint256)
func (_Smtlib *SmtlibSession) MAXDEPTHHARDCAP() (*big.Int, error) {
	return _Smtlib.Contract.MAXDEPTHHARDCAP(&_Smtlib.CallOpts)
}

// MAXDEPTHHARDCAP is a free data retrieval call binding the contract method 0xa751be24.
//
// Solidity: function MAX_DEPTH_HARD_CAP() view returns(uint256)
func (_Smtlib *SmtlibCallerSession) MAXDEPTHHARDCAP() (*big.Int, error) {
	return _Smtlib.Contract.MAXDEPTHHARDCAP(&_Smtlib.CallOpts)
}

// ROOTINFOLISTRETURNLIMIT is a free data retrieval call binding the contract method 0x40a73d98.
//
// Solidity: function ROOT_INFO_LIST_RETURN_LIMIT() view returns(uint256)
func (_Smtlib *SmtlibCaller) ROOTINFOLISTRETURNLIMIT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Smtlib.contract.Call(opts, &out, "ROOT_INFO_LIST_RETURN_LIMIT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ROOTINFOLISTRETURNLIMIT is a free data retrieval call binding the contract method 0x40a73d98.
//
// Solidity: function ROOT_INFO_LIST_RETURN_LIMIT() view returns(uint256)
func (_Smtlib *SmtlibSession) ROOTINFOLISTRETURNLIMIT() (*big.Int, error) {
	return _Smtlib.Contract.ROOTINFOLISTRETURNLIMIT(&_Smtlib.CallOpts)
}

// ROOTINFOLISTRETURNLIMIT is a free data retrieval call binding the contract method 0x40a73d98.
//
// Solidity: function ROOT_INFO_LIST_RETURN_LIMIT() view returns(uint256)
func (_Smtlib *SmtlibCallerSession) ROOTINFOLISTRETURNLIMIT() (*big.Int, error) {
	return _Smtlib.Contract.ROOTINFOLISTRETURNLIMIT(&_Smtlib.CallOpts)
}
